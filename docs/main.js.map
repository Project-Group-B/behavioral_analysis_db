{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/edit-user-info-dialog.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/admin.guard.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/user/current-user.service.ts","webpack:///./src/app/globals.ts","webpack:///./src/app/header/about-dialog.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.scss","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/incident-report-status/incident-report-status.component.html","webpack:///./src/app/incident-report-status/incident-report-status.component.scss","webpack:///./src/app/incident-report-status/incident-report-status.component.ts","webpack:///./src/app/incident-report/incident-report.component.html","webpack:///./src/app/incident-report/incident-report.component.scss","webpack:///./src/app/incident-report/incident-report.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/master-approved/master-approved.component.html","webpack:///./src/app/master-approved/master-approved.component.scss","webpack:///./src/app/master-approved/master-approved.component.ts","webpack:///./src/app/request-form-status/request-form-status.component.html","webpack:///./src/app/request-form-status/request-form-status.component.scss","webpack:///./src/app/request-form-status/request-form-status.component.ts","webpack:///./src/app/request-form/insert-new-animal-dialog.html","webpack:///./src/app/request-form/insert-new-item-dialog.html","webpack:///./src/app/request-form/request-form.component.html","webpack:///./src/app/request-form/request-form.component.scss","webpack:///./src/app/request-form/request-form.component.ts","webpack:///./src/app/shared/main/enrichment.service.ts","webpack:///./src/app/shared/main/incident.service.ts","webpack:///./src/app/user-account/user-account.component.html","webpack:///./src/app/user-account/user-account.component.scss","webpack:///./src/app/user-account/user-account.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Admin Page</h1>\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"Add User\\\">\\r\\n    <form class=\\\"form-css\\\" [formGroup]=\\\"addUserForm\\\" #newUserFormDirective=\\\"ngForm\\\" (ngSubmit)=\\\"addUser()\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 50 characters\\\">\\r\\n        <input #username matInput formControlName=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"User first Name\\\" required/>\\r\\n        <mat-hint align=\\\"end\\\">{{addUserForm.get('firstName').value?.length || 0}}/50</mat-hint>\\r\\n        <mat-error *ngIf=\\\"addUserForm.get('firstName').invalid\\\">{{getErrorMsg('firstName')}}</mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 45 characters\\\">\\r\\n        <input matInput formControlName=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"User Last Name\\\" required/>\\r\\n        <mat-hint align=\\\"end\\\">{{addUserForm.get('lastName').value?.length || 0}}/45</mat-hint>\\r\\n        <mat-error *ngIf=\\\"addUserForm.get('lastName').invalid\\\">{{getErrorMsg('lastName')}}</mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Select a department\\\">\\r\\n        <mat-select placeholder=\\\"Department\\\" formControlName=\\\"department\\\" required>\\r\\n          <mat-option *ngFor=\\\"let dept of departments\\\" [value]=\\\"dept\\\">\\r\\n            {{dept.departmentName}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 15 characters\\\">\\r\\n        <input matInput formControlName=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" required/>\\r\\n        <mat-hint align=\\\"end\\\">{{addUserForm.get('username').value?.length || 0}}/25</mat-hint>\\r\\n        <mat-error *ngIf=\\\"addUserForm.get('username').invalid\\\">{{getErrorMsg('username')}}</mat-error>\\r\\n      </mat-form-field>\\r\\n      <p>Default user password will be: '{{addUserForm.get('firstName').value?.toLowerCase().substring(0, 1)}}{{addUserForm.get('lastName').value?.toLowerCase().substring(0, 5)}}'</p>\\r\\n      <button type=\\\"submit\\\" style=\\\"display:none\\\" [disabled]=\\\"!addUserForm.valid\\\"></button>\\r\\n    </form>\\r\\n    <button mat-raised-button (click)=\\\"addUser()\\\" color=\\\"primary\\\" [disabled]=\\\"!addUserForm.valid\\\">Add User</button>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"User Actions\\\">\\r\\n    <mat-form-field class=\\\"max-width\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n    <button class=\\\"button-margin\\\" mat-raised-button (click)=\\\"deactivateUsers()\\\" color=\\\"warn\\\" \\r\\n      [disabled]=\\\"userSelection.selected.length === 0\\\" matTooltip=\\\"User accounts will be deactivated\\\">Deactivate User(s)</button>\\r\\n    <button class=\\\"button-margin\\\" mat-raised-button (click)=\\\"reactivateUsers()\\\" [disabled]=\\\"userSelection.selected.length === 0\\\">Reactivate User(s)</button>\\r\\n    <button class=\\\"button-margin\\\" mat-raised-button matTooltip=\\\"Resets selected user passwords to their default\\\" \\r\\n      [disabled]=\\\"userSelection.selected.length === 0\\\" (click)=\\\"resetPasswords()\\\">Reset User Passwords</button>\\r\\n    <button class=\\\"button-margin\\\" mat-raised-button (click)=\\\"getUsers(true)\\\" matTooltip=\\\"Gets the list of users again\\\">Reload Data</button>\\r\\n    <mat-checkbox name=\\\"showDeactivatedUsers\\\" id=\\\"showDeactivatedUsers\\\" class=\\\"button-margin\\\" [(ngModel)]=\\\"displayInactive\\\">Show Deactivated Users</mat-checkbox>\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                          [checked]=\\\"userSelection.hasValue() && isAllSelected()\\\"\\r\\n                          [indeterminate]=\\\"userSelection.hasValue() && !isAllSelected()\\\">\\r\\n            </mat-checkbox>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                          (change)=\\\"$event ? userSelection.toggle(row) : null\\\"\\r\\n                          [checked]=\\\"userSelection.isSelected(row)\\\"\\r\\n                          [disabled]=\\\"row.userStatus == 1\\\">\\r\\n            </mat-checkbox>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>User ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.userId}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"username\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Username </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.username}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"firstName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"department\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Department</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.department}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>User Status</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userStatus}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"editButton\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Edit User</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <button mat-raised-button (click)=\\\"openEditUserDialog(element)\\\">Edit User</button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row\\r\\n          *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n          [hidden]=\\\"row.userStatus == 2 && !displayInactive\\\"\\r\\n          [ngClass]=\\\"{'admin-row': row.userStatus == 1, 'deactivated-row': row.userStatus == 2}\\\"></tr>\\r\\n      </table>\\r\\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Additions/Deletions\\\">\\r\\n    <mat-form-field class=\\\"max-width\\\">\\r\\n      <input matInput [(ngModel)]=\\\"newDeptName\\\" placeholder=\\\"New Department Name\\\">\\r\\n      <mat-hint align=\\\"end\\\">{{newDeptName.length || 0}}/50</mat-hint>\\r\\n    </mat-form-field>\\r\\n    <button class=\\\"button-margin\\\" [disabled]=\\\"!newDeptName || newDeptName.length > 50\\\" (click)=\\\"addNewDepartment()\\\" mat-raised-button color=\\\"primary\\\">Add Department</button>\\r\\n    <br/>\\r\\n    <mat-form-field hintLabel=\\\"Select a department to remove\\\">\\r\\n      <mat-select placeholder=\\\"Department\\\" [(ngModel)]=\\\"deptIdToRemove\\\">\\r\\n        <mat-option *ngFor=\\\"let dept of departments\\\" [value]=\\\"dept.departmentId\\\">\\r\\n          {{dept.departmentName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <button class=\\\"button-margin\\\" [disabled]=\\\"!deptIdToRemove\\\" (click)=\\\"removeDept()\\\" mat-raised-button color=\\\"primary\\\">Remove Department</button>\\r\\n    <mat-divider></mat-divider>\\r\\n    <form class=\\\"form-css\\\" [formGroup]=\\\"newSpeciesForm\\\" #newSpeciesFormDirective=\\\"ngForm\\\" (ngSubmit)=\\\"addNewSpecies()\\\">\\r\\n      <mat-form-field class=\\\"max-width\\\" hintLabel=\\\"Max 50 characters\\\">\\r\\n        <input matInput formControlName=\\\"speciesName\\\" type=\\\"text\\\" placeholder=\\\"New Species Name\\\" required>\\r\\n        <mat-hint align=\\\"end\\\">{{newSpeciesForm.get('speciesName').value?.length || 0}}/50</mat-hint>\\r\\n        <mat-error *ngIf=\\\"newSpeciesForm.get('speciesName').invalid\\\">Invalid Species Name</mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field class=\\\"max-width\\\" hintLabel=\\\"Max 500 characters\\\">\\r\\n        <textarea matInput formControlName=\\\"speciesDescription\\\" type=\\\"text\\\" placeholder=\\\"New Species Description\\\" required></textarea>\\r\\n        <mat-hint align=\\\"end\\\">{{newSpeciesForm.get('speciesDescription').value?.length || 0}}/500</mat-hint>\\r\\n        <mat-error *ngIf=\\\"newSpeciesForm.get('speciesDescription').invalid\\\">Invalid Species Description</mat-error>\\r\\n      </mat-form-field>\\r\\n      <button type=\\\"submit\\\" style=\\\"display:none\\\" [disabled]=\\\"!newSpeciesForm.valid\\\"></button>\\r\\n    </form>\\r\\n    <button [disabled]=\\\"!newSpeciesForm.valid\\\" (click)=\\\"addNewSpecies()\\\" mat-raised-button color=\\\"primary\\\">Add Species</button>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-form-field hintLabel=\\\"Select a species to remove\\\">\\r\\n      <mat-select placeholder=\\\"Species\\\" [(ngModel)]=\\\"speciesIdToRemove\\\">\\r\\n        <mat-option *ngFor=\\\"let spec of species\\\" [value]=\\\"spec.speciesId\\\">\\r\\n          {{spec.speciesName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <button class=\\\"button-margin\\\" [disabled]=\\\"!speciesIdToRemove\\\" (click)=\\\"removeSpecies()\\\" mat-raised-button color=\\\"primary\\\">Remove Species</button>\\r\\n    <mat-divider></mat-divider>\\r\\n    <form class=\\\"form-css\\\" [formGroup]=\\\"newCategoryForm\\\" #newCategoryFormDirective=\\\"ngForm\\\" (ngSubmit)=\\\"addNewCategory()\\\">\\r\\n        <mat-form-field class=\\\"max-width\\\" hintLabel=\\\"Max 25 characters\\\">\\r\\n          <input matInput formControlName=\\\"catName\\\" type=\\\"text\\\" placeholder=\\\"New Category Name\\\" required>\\r\\n          <mat-hint align=\\\"end\\\">{{newCategoryForm.get('catName').value?.length || 0}}/25</mat-hint>\\r\\n          <mat-error *ngIf=\\\"newCategoryForm.get('catName').invalid\\\">Invalid Category Name</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"max-width\\\" hintLabel=\\\"Max 500 characters\\\">\\r\\n          <textarea matInput formControlName=\\\"catDescription\\\" type=\\\"text\\\" placeholder=\\\"New Category Description\\\" required></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{newCategoryForm.get('catDescription').value?.length || 0}}/500</mat-hint>\\r\\n          <mat-error *ngIf=\\\"newCategoryForm.get('catDescription').invalid\\\">Invalid Category Description</mat-error>\\r\\n        </mat-form-field>\\r\\n        <button type=\\\"submit\\\" style=\\\"display:none\\\" [disabled]=\\\"!newCategoryForm.valid\\\"></button>\\r\\n      </form>\\r\\n      <button [disabled]=\\\"!newCategoryForm.valid\\\" (click)=\\\"addNewCategory()\\\" mat-raised-button color=\\\"primary\\\">Add Category</button>\\r\\n    <mat-divider></mat-divider>  \\r\\n    <form [formGroup]=\\\"homepageImageForm\\\">\\r\\n      <label for=\\\"homepagePicture\\\">Upload new home page picture:</label>\\r\\n      <input type=\\\"file\\\" (change)=\\\"onHomepageFileChange($event)\\\" accept=\\\"{.png,.jpg,.jpeg}\\\"/>\\r\\n      <button (click)=\\\"uploadNewHomepageImage()\\\" matTooltip=\\\"WARNING: will replace current home page image\\\" \\r\\n        color=\\\"warn\\\" mat-raised-button>Upload Image</button>\\r\\n    </form>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.table-container {\\n  position: relative;\\n  max-height: 400px;\\n  overflow: auto; }\\n\\n.max-width {\\n  width: 100%; }\\n\\ntd, th {\\n  width: 10%; }\\n\\n.button-margin {\\n  margin-left: 20px; }\\n\\n.admin-row {\\n  background-color: #75a4ef; }\\n\\n.deactivated-row {\\n  background-color: rgba(128, 128, 128, 0.5); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vQzpcXFVzZXJzXFxaYWNoXFxEb2N1bWVudHNcXGFTcHJpbmcyMDE5XFxDYXBzdG9uZVxcUEdCLUFuZ3VsYXJcXEJlaGF2aW9yYWxFbnJpY2htZW50LUFuZ3VsYXIvc3JjXFxhcHBcXGFkbWluXFxhZG1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVcsRUFBQTs7QUFFYjtFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsY0FBYyxFQUFBOztBQUVoQjtFQUNFLFdBQVcsRUFBQTs7QUFFYjtFQUNFLFVBQVUsRUFBQTs7QUFFWjtFQUNFLGlCQUFpQixFQUFBOztBQUVuQjtFQUNFLHlCQUF5QixFQUFBOztBQUUzQjtFQUNFLDBDQUFtQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYWRtaW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnRhYmxlLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1heC1oZWlnaHQ6IDQwMHB4O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbi5tYXgtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbnRkLCB0aCB7XHJcbiAgd2lkdGg6IDEwJTtcclxufVxyXG4uYnV0dG9uLW1hcmdpbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuLmFkbWluLXJvdyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzc1YTRlZjtcclxufVxyXG4uZGVhY3RpdmF0ZWQtcm93IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRjb2xvcjogZ3JheSwgJGFscGhhOiAwLjUpXHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, NgForm, FormBuilder, Validators } from '@angular/forms';\r\nimport { DepartmentInfo } from '../shared/interfaces/department-info';\r\nimport { MatSnackBar, MatTableDataSource, MatPaginator, MatSort, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport { UserListInfo } from '../shared/interfaces/user-list-info';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { StandardReturnObject } from '../shared/interfaces/standard-return-object';\r\nimport { EditUserInfo } from '../shared/interfaces/edit-user-info';\r\nimport { SpeciesInfo } from '../shared/interfaces/species-info';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  // Add User variables\r\n  addUserForm: FormGroup;\r\n  departments: DepartmentInfo[];\r\n\r\n  // Deactivate User variables\r\n  displayedColumns: string[] = ['select', 'id', 'username', 'firstName', 'lastName', 'department', 'status', 'editButton'];\r\n  userSelection = new SelectionModel<UserListInfo>(true, []);\r\n  dataSource: MatTableDataSource<UserListInfo>;\r\n  displayInactive = false;\r\n\r\n  // Department Variables\r\n  newDeptName = '';\r\n  deptIdToRemove: number;\r\n\r\n  // Species Variables\r\n  newSpeciesForm: FormGroup;\r\n  speciesIdToRemove: number;\r\n  species: SpeciesInfo[];\r\n\r\n  // Add Category Variables\r\n  newCategoryForm: FormGroup;\r\n\r\n  // Picture Variables\r\n  homepageImageForm: FormGroup;\r\n\r\n  // ViewChild\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('username') usernameRef: ElementRef;\r\n  @ViewChild('newUserFormDirective') private newUserformDirective: NgForm;\r\n  @ViewChild('newSpeciesFormDirective') private newSpeciesFormDirective: NgForm;\r\n  @ViewChild('newCategoryFormDirective') private newCategoryFormDirective: NgForm;\r\n  constructor(\r\n    private service: EnrichmentService,\r\n    private formBuilder: FormBuilder,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.addUserForm = this.formBuilder.group({\r\n      firstName: new FormControl('', [Validators.required, Validators.maxLength(50)]),\r\n      lastName: new FormControl('', [Validators.required, Validators.maxLength(45)]),\r\n      department: new FormControl({departmentId: -1, departmentName: ''}, [Validators.required]),\r\n      username: new FormControl('', [Validators.required, Validators.maxLength(25)])\r\n    });\r\n    this.homepageImageForm = this.formBuilder.group({\r\n      image: new FormControl(null)\r\n    });\r\n    this.newSpeciesForm = this.formBuilder.group({\r\n      speciesName: new FormControl('', [Validators.required, Validators.maxLength(50)]),\r\n      speciesDescription: new FormControl('', [Validators.required, Validators.maxLength(500)])\r\n    });\r\n    this.newCategoryForm = this.formBuilder.group({\r\n      catName: new FormControl('', [Validators.required, Validators.maxLength(25)]),\r\n      catDescription: new FormControl('', [Validators.required, Validators.maxLength(500)])\r\n    });\r\n    this.getDepartments();\r\n    this.getUsers(false);\r\n    this.getSpecies();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.userSelection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.userSelection.clear() :\r\n        this.dataSource.data.forEach(row => this.userSelection.select(row));\r\n  }\r\n\r\n  addUser() {\r\n    this.service.addUser(this.addUserForm).subscribe((data: any) => {\r\n      if (!data.error) {\r\n        this.snackbar.open(data.message, 'OK', {\r\n          duration: 3000\r\n        });\r\n        this.newUserformDirective.resetForm();\r\n        this.usernameRef.nativeElement.focus();\r\n      } else {\r\n        this.snackbar.open(data.errorMsg, 'OK', {\r\n          duration: 5000\r\n        });\r\n      }\r\n    }, (err: any) => {\r\n      this.snackbar.open('Error signing up', 'OK', {\r\n        duration: 3000\r\n      });\r\n      console.error('Error signing up user:', err);\r\n    });\r\n  }\r\n\r\n  getUsers(showSnackbar: boolean): void {\r\n    this.service.getUsers().subscribe((data: UserListInfo[]) => {\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      if (showSnackbar) {\r\n        this.snackbar.open('Successfully retrieved users.', 'OK', {\r\n          duration: 2000\r\n        });\r\n      }\r\n    }, (err: any) => {\r\n      console.error('Error getting users', err);\r\n    });\r\n  }\r\n\r\n  deactivateUsers(): void {\r\n    this.service.deactivateUsers(this.userSelection.selected).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.userSelection.clear();\r\n      this.getUsers(false);\r\n      this.displayInactive = false;\r\n    }, (err: any) => {\r\n      console.error('error deactivating users:', err);\r\n      this.snackbar.open('HTTP error when deactivating user(s). Please try again.', 'OK');\r\n    });\r\n  }\r\n\r\n  reactivateUsers(): void {\r\n    this.service.reactivateUsers(this.userSelection.selected).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.userSelection.clear();\r\n      this.getUsers(false);\r\n    }, (err: any) => {\r\n      console.error('error reactivating users:', err);\r\n      this.snackbar.open('HTTP error when reactivating user(s). Please try again.', 'OK');\r\n    });\r\n  }\r\n\r\n  addNewDepartment() {\r\n    if (this.newDeptName.length <= 0 || this.newDeptName.length > 50) {\r\n      this.snackbar.open('Department Name must be between 1 and 50 characters', 'OK', {\r\n        duration: 3000\r\n      });\r\n      return;\r\n    }\r\n    this.service.addDepartment(this.newDeptName).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.newDeptName = '';\r\n      this.getDepartments();\r\n    }, (err: any) => {\r\n      console.error('error adding new department:', err);\r\n      this.snackbar.open('HTTP error adding new department', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  removeDept() {\r\n    this.service.removeDepartmentById(this.deptIdToRemove).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.deptIdToRemove = null;\r\n    }, (err: any) => {\r\n      console.error(`error removing department with id ${this.deptIdToRemove}`, err);\r\n      this.snackbar.open('HTTP error when removing department', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  getSpecies() {\r\n    this.service.getSpecies().subscribe((data: SpeciesInfo[]) => {\r\n      this.species = data;\r\n    }, (err: any) => {\r\n      this.snackbar.open('HTTP error getting species. Please reload the page.', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  addNewSpecies() {\r\n    this.service.addSpecies(this.newSpeciesForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      if (!data.error) {\r\n        this.newSpeciesFormDirective.resetForm();\r\n        this.getSpecies();\r\n      }\r\n    }, (err: any) => {\r\n      this.snackbar.open('HTTP error when adding species. Please try again.', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  removeSpecies() {\r\n    this.service.removeSpeciesbyId(this.speciesIdToRemove).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.speciesIdToRemove = null;\r\n      this.getSpecies();\r\n    }, (err: any) => {\r\n      this.snackbar.open('HTTP error when removing species. Please try again.', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  addNewCategory() {\r\n    this.service.addCategory(this.newCategoryForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      if (!data.error) {\r\n        this.newCategoryFormDirective.resetForm();\r\n      }\r\n    }, (err: any) => {\r\n      this.snackbar.open('HTTP error when adding new category. Please try again.', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  resetPasswords() {\r\n    this.service.resetPasswords(this.userSelection.selected).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.userSelection.clear();\r\n    }, (err: any) => {\r\n      console.error(`error resetting passwords:`, err);\r\n      this.snackbar.open('HTTP error when resetting passwords', 'OK', {\r\n        duration: 3000\r\n      });\r\n    });\r\n  }\r\n\r\n  uploadNewHomepageImage() {\r\n    this.service.uploadNewHomepageImage(this.homepageImageForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n    }, (err: any) => {\r\n      console.error('HTTP error when uploading image:');\r\n      console.error(err);\r\n      this.snackbar.open('HTTP error when uploading image; please try again', 'OK', {\r\n        duration: 5000\r\n      });\r\n    });\r\n  }\r\n\r\n  onHomepageFileChange(event) {\r\n    const reader = new FileReader();\r\n\r\n    if (event.target.files && event.target.files.length) {\r\n      const file = event.target.files[0];\r\n\r\n      reader.onloadend = () => {\r\n        // Sets value to Base64 encoded string\r\n        this.homepageImageForm.patchValue({\r\n          image: reader.result\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  private getDepartments() {\r\n    this.service.getDepartments().subscribe((data: DepartmentInfo[]) => {\r\n      this.departments = data;\r\n    }, (err: any) => {\r\n      console.error('Error getting departments:', err);\r\n    });\r\n  }\r\n\r\n  getErrorMsg(formControlName: string): string {\r\n    if (this.addUserForm.get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.addUserForm.get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n\r\n  openEditUserDialog(userToEdit: UserListInfo): void {\r\n    console.log('will edit user:');\r\n    console.log(userToEdit);\r\n    const editUserInfo: EditUserInfo = {\r\n      firstName: userToEdit.firstName,\r\n      lastName: userToEdit.lastName,\r\n      userName: userToEdit.username,\r\n      userId: userToEdit.userId,\r\n      department: this.departments.find(x => x.departmentName === userToEdit.department),\r\n      allDepartments: this.departments\r\n    };\r\n    const editUserDialogRef = this.dialog.open(EditUserInfoDialogComponent, {data: editUserInfo});\r\n\r\n    editUserDialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.getUsers(false);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-user-info-dialog',\r\n  templateUrl: './edit-user-info-dialog.html',\r\n})\r\nexport class EditUserInfoDialogComponent {\r\n  editUserForm: FormGroup;\r\n  editUserDepartments: DepartmentInfo[];\r\n  usernameToEdit: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditUserInfoDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: EditUserInfo,\r\n    private snackbar: MatSnackBar,\r\n    private service: EnrichmentService,\r\n    private formBuilder: FormBuilder) {\r\n      this.editUserForm = this.formBuilder.group({\r\n        firstName: new FormControl(data.firstName, [Validators.required, Validators.maxLength(50)]),\r\n        lastName: new FormControl(data.lastName, [Validators.required, Validators.maxLength(45)]),\r\n        department: new FormControl(data.department, [Validators.required]),\r\n        username: new FormControl(data.userName, [Validators.required, Validators.maxLength(25)]),\r\n        userId: new FormControl(data.userId, Validators.required)\r\n      });\r\n      this.editUserDepartments = data.allDepartments;\r\n      this.usernameToEdit = data.userName;\r\n    }\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  editUser() {\r\n    this.service.editUser(this.editUserForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      if (!data.error) {\r\n        this.dialogRef.close(true);\r\n      }\r\n    }, (err: any) => {\r\n      console.error('Error editing user info:');\r\n      console.error(err);\r\n      this.snackbar.open('HTTP error when editing user. Please try again.', 'OK', {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n\r\n  getErrorMsg(formControlName: string): string {\r\n    if (this.editUserForm.get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.editUserForm.get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else if (this.editUserForm.get(formControlName).hasError('pattern')) {\r\n      return 'Input must be a number.';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Edit User '{{usernameToEdit}}'</h1>\\r\\n\\r\\n<div mat-dialog-content>\\r\\n  <form class=\\\"form-css\\\" [formGroup]=\\\"editUserForm\\\" #formDirective=\\\"ngForm\\\" (ngSubmit)=\\\"editUser()\\\">\\r\\n    <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 50 characters\\\">\\r\\n      <input #username matInput formControlName=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"User first Name\\\" required/>\\r\\n      <mat-hint align=\\\"end\\\">{{editUserForm.get('firstName').value?.length || 0}}/50</mat-hint>\\r\\n      <mat-error *ngIf=\\\"editUserForm.get('firstName').invalid\\\">{{getErrorMsg('firstName')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 45 characters\\\">\\r\\n      <input matInput formControlName=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"User Last Name\\\" required/>\\r\\n      <mat-hint align=\\\"end\\\">{{editUserForm.get('lastName').value?.length || 0}}/45</mat-hint>\\r\\n      <mat-error *ngIf=\\\"editUserForm.get('lastName').invalid\\\">{{getErrorMsg('lastName')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Select a department\\\">\\r\\n      <mat-select placeholder=\\\"Department\\\" formControlName=\\\"department\\\" required>\\r\\n        <mat-option *ngFor=\\\"let dept of editUserDepartments\\\" [value]=\\\"dept\\\">\\r\\n          {{dept.departmentName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\" hintLabel=\\\"Max 15 characters\\\">\\r\\n      <input matInput formControlName=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" required/>\\r\\n      <mat-hint align=\\\"end\\\">{{editUserForm.get('username').value?.length || 0}}/25</mat-hint>\\r\\n      <mat-error *ngIf=\\\"editUserForm.get('username').invalid\\\">{{getErrorMsg('username')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button type=\\\"submit\\\" style=\\\"display:none\\\" [disabled]=\\\"!editUserForm.valid\\\"></button>\\r\\n  </form>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"accent\\\">Cancel</button>\\r\\n  <button mat-raised-button style=\\\"margin-left: 20px;\\\" type=\\\"submit\\\" (click)=\\\"editUser()\\\" matTooltip=\\\"Will override current user details\\\" [disabled]=\\\"!editUserForm.valid\\\">Edit User</button>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RequestFormComponent } from './request-form/request-form.component';\r\nimport { RequestFormStatusComponent } from './request-form-status/request-form-status.component';\r\nimport { IncidentReportComponent } from './incident-report/incident-report.component';\r\nimport { IncidentReportStatusComponent } from './incident-report-status/incident-report-status.component';\r\nimport { MasterApprovedComponent } from './master-approved/master-approved.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminGuard } from './auth/admin.guard';\r\nimport { UserAccountComponent } from './user-account/user-account.component';\r\nimport { HelpComponent } from './help/help.component';\r\n\r\n// https://angular.io/guide/router#milestone-5-route-guards\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'home', canActivate: [AuthGuard], component: HomeComponent},\r\n  {path: 'request-form', canActivate: [AuthGuard], component: RequestFormComponent},\r\n  {path: 'request-form-status', canActivate: [AuthGuard], component: RequestFormStatusComponent},\r\n  {path: 'incident-report', canActivate: [AuthGuard], component: IncidentReportComponent},\r\n  {path: 'incident-report-status', canActivate: [AuthGuard], component: IncidentReportStatusComponent},\r\n  {path: 'master-approved',  canActivate: [AuthGuard], component: MasterApprovedComponent},\r\n  {path: 'admin', canActivate: [AdminGuard], component: AdminComponent},\r\n  {path: 'account', canActivate: [AuthGuard], component: UserAccountComponent},\r\n  {path: 'help', canActivate: [AuthGuard], component: HelpComponent},\r\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\r\n  {path: '**', redirectTo: '/login'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Globals } from './globals';\r\nimport { UserInfo } from './shared/interfaces/user-info';\r\nimport { CurrentUserService } from './auth/user/current-user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'BehavioralEnrichment-Angular';\r\n\r\n  constructor(private globals: Globals, private currentUser: CurrentUserService) {}\r\n\r\n  ngOnInit() {\r\n    const userInfo = JSON.parse(sessionStorage.getItem(this.globals.userInfoKey)) as UserInfo;\r\n    if (userInfo) {\r\n      this.currentUser.setUser(userInfo);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n// for table displays\r\nimport { MatPaginatorModule} from '@angular/material';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule, MatTableDataSource} from '@angular/material/table';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RequestFormComponent, InsertNewItemDialogComponent, InsertNewAnimalDialogComponent } from './request-form/request-form.component';\r\nimport { RequestFormStatusComponent } from './request-form-status/request-form-status.component';\r\nimport { IncidentReportComponent } from './incident-report/incident-report.component';\r\nimport { IncidentReportStatusComponent } from './incident-report-status/incident-report-status.component';\r\nimport { MasterApprovedComponent } from './master-approved/master-approved.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HeaderComponent, AboutDialogComponent } from './header/header.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Globals } from './globals';\r\nimport { AdminComponent, EditUserInfoDialogComponent } from './admin/admin.component';\r\nimport { UserAccountComponent } from './user-account/user-account.component';\r\nimport { HelpComponent } from './help/help.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RequestFormComponent,\r\n    RequestFormStatusComponent,\r\n    IncidentReportComponent,\r\n    IncidentReportStatusComponent,\r\n    MasterApprovedComponent,\r\n    HeaderComponent,\r\n    InsertNewItemDialogComponent,\r\n    AdminComponent,\r\n    UserAccountComponent,\r\n    HelpComponent,\r\n    InsertNewAnimalDialogComponent,\r\n    EditUserInfoDialogComponent,\r\n    AboutDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    FormsModule,\r\n    MatSnackBarModule,\r\n    MatStepperModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatSortModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatExpansionModule,\r\n    MatDividerModule\r\n  ],\r\n  entryComponents: [\r\n    InsertNewItemDialogComponent,\r\n    InsertNewAnimalDialogComponent,\r\n    EditUserInfoDialogComponent,\r\n    AboutDialogComponent\r\n  ],\r\n  providers: [Globals],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Globals } from '../globals';\r\nimport { CurrentUserService } from './user/current-user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private globals: Globals,\r\n    private currentUser: CurrentUserService,\r\n    private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    const isAdmin = (this.checkIsAdmin() && this.checkLoggedIn());\r\n\r\n    if (isAdmin) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/home']);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkIsAdmin(): boolean {\r\n    return this.currentUser.getUser().admin;\r\n  }\r\n\r\n  checkLoggedIn(): boolean {\r\n    if (sessionStorage.getItem(this.globals.sessionIdKey)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { Globals } from '../globals';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private service: AuthService, private router: Router, private globals: Globals) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      const url: string = state.url;\r\n\r\n      return this.checkLogIn(url);\r\n  }\r\n\r\n  checkLogIn(url: string): boolean {\r\n    if (sessionStorage.getItem(this.globals.sessionIdKey)) {\r\n      return true;\r\n    }\r\n\r\n    this.service.redirectUrl = url;\r\n\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Globals } from '../globals';\r\nimport { UserInfo } from '../shared/interfaces/user-info';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  public redirectUrl: string;\r\n  constructor(private http: HttpClient, private globals: Globals) { }\r\n\r\n  // https://stackoverflow.com/a/53528644\r\n  loginUser(username: string, password: string): Observable<UserInfo> {\r\n    const requestbody = {\r\n      username,\r\n      password\r\n    };\r\n    return this.http.post<UserInfo>(`${this.globals.baseUrl}/loginUser`, requestbody, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserInfo } from 'src/app/shared/interfaces/user-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrentUserService {\r\n  private user: UserInfo;\r\n\r\n  constructor() { }\r\n\r\n  setUser(user: UserInfo) {\r\n    this.user = user;\r\n  }\r\n\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CurrentUserService } from './auth/user/current-user.service';\r\nimport { UserInfo } from './shared/interfaces/user-info';\r\n\r\n// To change in a file, create a function and set it to something like this:\r\n/*\r\nimport {Globals} from '...';\r\nconstructor(private globals: Globals)\r\nprivate changed() {\r\n  this.globals.baseUrl = '';\r\n}\r\n*/\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Globals {\r\n  readonly sessionIdKey = 'behavior-enrichment-session';\r\n  readonly baseUrl = 'http://localhost:8080';\r\n  readonly userInfoKey = 'behavioral-user-info';\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>About this Webpage</h1>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <h2>Developers</h2>\\r\\n  <p>This application was developed by Project Group B at the University of Nebraska at Omaha (class of 2019) as part of their Capstone course. Their names are:</p>\\r\\n  <ul>\\r\\n    <li>Donovan Troshynski</li>\\r\\n    <li>Zach Evans</li>\\r\\n    <li>Mariah Schon</li>\\r\\n    <li>Al Ohlinger</li>\\r\\n  </ul>\\r\\n  <h2>Acknowledgements</h2>\\r\\n  <p>Project Group B would like to thank the following:</p>\\r\\n  <ul>\\r\\n    <li>The <a href=\\\"https://angular.io/\\\" target=\\\"_blank\\\">Angular</a> team</li>\\r\\n    <li>The <a href=\\\"https://material.angular.io/\\\" target=\\\"_blank\\\">Angular Material</a> team</li>\\r\\n    <li>The <a href=\\\"https://spring.io/projects/spring-boot\\\" target=\\\"_blank\\\">Spring Boot</a> team</li>\\r\\n    <li>Our client, Taylor Daniels, for being patient and understanding as we learned how to build a webpage and work as a team.</li>\\r\\n    <li>Our professor, Harvey Siy, for teaching the course.</li>\\r\\n  </ul>\\r\\n  <h2>Tech Stack</h2>\\r\\n  <p>This project was built with:</p>\\r\\n  <ul>\\r\\n    <li>Typescript v3.4.3</li>\\r\\n    <li>Angular CLI v7.2.4</li>\\r\\n    <li>Angular v7.2.12</li>\\r\\n    <li>Angular Material v7.3.7</li>\\r\\n    <li>Node v8.11.3</li>\\r\\n    <li>Spring Boot v2.1.2</li>\\r\\n    <li>MySQL v8.0.14</li>\\r\\n  </ul>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button color=\\\"primary\\\" mat-dialog-close>Close</button>\\r\\n</div>\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"full-header\\\">\\r\\n  <button mat-button routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</button>\\r\\n  <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</button>\\r\\n  <mat-menu #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item color=\\\"primary\\\" routerLink=\\\"/request-form\\\" routerLinkActive=\\\"active\\\">Novel Enrichment Request Form</button>\\r\\n    <button mat-menu-item color=\\\"primary\\\" routerLink=\\\"/incident-report\\\" routerLinkActive=\\\"active\\\">Incident Report</button>\\r\\n    <button mat-menu-item color=\\\"primary\\\" routerLink=\\\"/master-approved\\\" routerLinkActive=\\\"active\\\">Approved Enrichment</button>\\r\\n    <button mat-menu-item color=\\\"primary\\\" routerLink=\\\"/request-form-status\\\" routerLinkActive=\\\"active\\\">Request Form Status Report</button>\\r\\n    <button mat-menu-item color=\\\"primary\\\" routerLink=\\\"/incident-report-status\\\" routerLinkActive=\\\"active\\\">Incident Status Report</button>\\r\\n  </mat-menu>\\r\\n  <button mat-button routerLink=\\\"/account\\\" routerLinkActive=\\\"active\\\">My Account</button>\\r\\n  <button *ngIf=\\\"isAdmin\\\" mat-button routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">Admin</button>\\r\\n  <img class=\\\"left-margin-to-center\\\" src=\\\"../../assets/images/Zoo_Logo_Horizontal.jpg\\\" alt=\\\"Zoo Logo\\\" height=\\\"50\\\" width=\\\"120\\\">\\r\\n  <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  <button mat-button routerLink=\\\"/help\\\" routerLinkActive=\\\"active\\\">Help</button>\\r\\n  <button mat-button class=\\\"right-margin\\\" (click)=\\\"showAboutDialog()\\\">About</button>\\r\\n  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"logout()\\\">Logout</button>\\r\\n</mat-toolbar>\\r\\n\"","module.exports = \".fill-remaining-space {\\n  flex: 1 1 auto; }\\n\\n.full-header {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 10; }\\n\\n.left-margin-to-center {\\n  margin-left: 25%; }\\n\\n.right-margin {\\n  margin-right: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL0M6XFxVc2Vyc1xcWmFjaFxcRG9jdW1lbnRzXFxhU3ByaW5nMjAxOVxcQ2Fwc3RvbmVcXFBHQi1Bbmd1bGFyXFxCZWhhdmlvcmFsRW5yaWNobWVudC1Bbmd1bGFyL3NyY1xcYXBwXFxoZWFkZXJcXGhlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWMsRUFBQTs7QUFFaEI7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsV0FBVyxFQUFBOztBQUViO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBRWxCO0VBQ0Usa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG4uZnVsbC1oZWFkZXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICB6LWluZGV4OiAxMDtcclxufVxyXG4ubGVmdC1tYXJnaW4tdG8tY2VudGVyIHtcclxuICBtYXJnaW4tbGVmdDogMjUlO1xyXG59XHJcbi5yaWdodC1tYXJnaW4ge1xyXG4gIG1hcmdpbi1yaWdodDogMjVweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Globals } from '../globals';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  username: string;\r\n  isAdmin: boolean;\r\n  constructor(private authService: AuthService,\r\n    private router: Router,\r\n    private globals: Globals,\r\n    private currentUser: CurrentUserService,\r\n    private aboutDialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.username = this.currentUser.getUser().username;\r\n    this.isAdmin = this.currentUser.getUser().admin;\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.removeItem(this.globals.sessionIdKey);\r\n    this.authService.redirectUrl = '';\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  showAboutDialog() {\r\n    this.aboutDialog.open(AboutDialogComponent);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-about-dialog',\r\n  templateUrl: './about-dialog.html',\r\n})\r\nexport class AboutDialogComponent {\r\n  constructor() {}\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Help & Tutorial</h1>\\r\\n\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"All Users\\\">\\r\\n    <mat-accordion>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Submitting Incident Report</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>To submit an incident report, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Incident Report\\\" page.</li>\\r\\n          <li>Fill out each step of the form, making sure the information is correct.</li>\\r\\n          <li>Sign the form with your name and the date of submission.</li>\\r\\n          <li>Double check that everything in the form is correct to the best of your understanding.</li>\\r\\n          <li>If everything checks out, submit the form.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Submitting Enrichment Request</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>To submit a request to add an enrichment item, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Request Form\\\" page</li>\\r\\n          <li>Fill out each step on the page</li>\\r\\n          <li>If a dropdown doesn't have the value you want, contact an administrator to get it added</li>\\r\\n          <li>Before you submit, double check everything is correct. You will not be able to edit your request after submisssion.</li>\\r\\n          <li>If everything checks out, submit the request.</li>\\r\\n          <li>Check back on the status of your request by going to the \\\"Request Form Status Report\\\" page</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Admins\\\" *ngIf=\\\"isAdmin\\\">\\r\\n    <mat-accordion>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Approving Enrichment Requests</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>Approve an enrichment request by following these steps:</p>\\r\\n        <ol>\\r\\n          <li>Step one</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Adding a user</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>Add a new user by following these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"Add User\\\" tab.</li>\\r\\n          <li>Fill out the form with the new user information.</li>\\r\\n          <li>The password will be set to a default value. Please encourage the user to change it as soon as possible.</li>\\r\\n          <li>Submit the form.</li>\\r\\n          <li>If successful, the user has been added.</li>\\r\\n          <li>If unsuccessful, the user has not been added and you may need to try again (or contact an IT professional).</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Edit user info</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>Edit a user's info by following these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"User Actions\\\" tab.</li>\\r\\n          <li>Here you will see a list of every user that has access to the site.</li>\\r\\n          <li>Search for the user whose info you need to change.</li>\\r\\n          <li>The right-most column on that user's row will have a button labeled \\\"Edit User\\\". Click it.</li>\\r\\n          <li>A pop-up dialog will show containing a form filled out with the user's current information.</li>\\r\\n          <li>Change the information you need to.</li>\\r\\n          <li>Warning: any information you change will replace the current information. Make sure everything you entered is correct!</li>\\r\\n          <li>Submit the form.</li>\\r\\n          <li>A snackbar will show at the bottom detailing whether the request was successful or not.</li>\\r\\n          <li>If successful, the new information will now be shown in the table.</li>\\r\\n          <li>If unsuccessful, try again or contact an IT professional.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Deactivate/Reactivate a User Account</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p><strong>Warning: deactivating a user's account will prevent them from logging in.</strong></p>\\r\\n        <p>To deactivate or reactivate a user's account, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"User Actions\\\" tab.</li>\\r\\n          <li>You will see a list of all users with access to the site.\\r\\n            <ul>\\r\\n              <li>Optional: currently deactivated users are hidden by default. Check the \\\"Show Deactivated Users\\\" checkbox to show them.</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <li>Search for the user(s) you wish to deactivate.</li>\\r\\n          <li>The left-most column of each row should be a checkbox. Check the row for each user whose account you wish to deactivate or reactivate.</li>\\r\\n          <li>The deactivate/reactivate button should now be clickable.</li>\\r\\n          <li>Make sure only those users whose accounts you wish to deactivate or reactivate are checked.</li>\\r\\n          <li>Click the appropriate button.</li>\\r\\n          <li>A snackbar will show at the bottom detailing whether the request was successful or not.</li>\\r\\n          <li>If successful, the user account status will be changed.</li>\\r\\n          <li>If unsuccessful, try again or contact an IT professional.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Reset a User's Password</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p><strong>Warning: only reset a user's password if the user has forgotten theirs.</strong></p>\\r\\n        <p>To reset a user's password, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"User Actions\\\" tab.</li>\\r\\n          <li>You will see a list of all users with access to the site.</li>\\r\\n          <li>Search for the user(s) you need.</li>\\r\\n          <li>The left-most column of each row should be a checkbox. Check the row for each user whose password you need to reset.</li>\\r\\n          <li>The \\\"Reset User Passwords\\\" button should now be clickable.</li>\\r\\n          <li>Make sure only those users whose account passwords you need to reset are checked.</li>\\r\\n          <li>Click the \\\"Reset User Passwords\\\" button.</li>\\r\\n          <li>A snackbar will show at the bottom detailing whether the request was successful or not.</li>\\r\\n          <li>If successful, the user's password will be changed to the default password:\\r\\n            <ul>\\r\\n              <li>Default password is the first letter of the user's firstname followed by the first 5 letters of their last name, all lower case.</li>\\r\\n              <li>For example, user \\\"John Doe\\\" has a default password of \\\"jdoe\\\" and user \\\"Ash Ketchum\\\" has a default password of \\\"aketch\\\".</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n          <li>If unsuccessful, try again or contact an IT professional.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Add a New Department/Species, Change Homepage Image, etc.</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>To add new information, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"Additions/Deletions\\\" tab.</li>\\r\\n          <li>You will see a variety of inputs.</li>\\r\\n          <li>Find the input(s) for the information you want to add.</li>\\r\\n          <li>Fill out the information for the addition.</li>\\r\\n          <li>Make sure the information is correct.</li>\\r\\n          <li>Click the appropriate button.</li>\\r\\n          <li>A snackbar will show at the bottom detailing whether the request was successful or not.</li>\\r\\n          <li>If successful, the information will be added.</li>\\r\\n          <li>If unsuccessful, try again or contact an IT professional.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n      <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>Delete a Department/Species, etc.</mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <p>To delete some information, follow these steps:</p>\\r\\n        <ol>\\r\\n          <li>Go to the \\\"Admin\\\" page using the button on the header bar.</li>\\r\\n          <li>Click on the \\\"Additions/Deletions\\\" tab.</li>\\r\\n          <li>You will see a variety of inputs.</li>\\r\\n          <li>Find the input for the information you want to delete.</li>\\r\\n          <li>Select the information you need to delete.</li>\\r\\n          <li>Make sure the information you selected is correct.</li>\\r\\n          <li>Click the appropriate button.</li>\\r\\n          <li>A snackbar will show at the bottom detailing whether the request was successful or not.</li>\\r\\n          <li>If successful, the information will be deleted/removed.</li>\\r\\n          <li>If unsuccessful, try again or contact an IT professional.</li>\\r\\n        </ol>\\r\\n      </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","module.exports = \".bottom-margin {\\n  margin-bottom: 0%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVscC9DOlxcVXNlcnNcXFphY2hcXERvY3VtZW50c1xcYVNwcmluZzIwMTlcXENhcHN0b25lXFxQR0ItQW5ndWxhclxcQmVoYXZpb3JhbEVucmljaG1lbnQtQW5ndWxhci9zcmNcXGFwcFxcaGVscFxcaGVscC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvaGVscC9oZWxwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvdHRvbS1tYXJnaW4ge1xyXG4gIG1hcmdpbi1ib3R0b206IDAlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.scss']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n  isAdmin = false;\r\n  constructor(private currentUser: CurrentUserService) { }\r\n\r\n  ngOnInit() {\r\n    this.isAdmin = this.currentUser.getUser().admin;\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Omaha's Henry Doorly Zoo & Aquarium Behavioral Enrichment Program</h1>\\r\\n<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"550px\\\">\\r\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Navigation</mat-card-title>\\r\\n        <mat-card-subtitle>Also included in the Menu Dropdown</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</button>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/master-approved\\\" routerLinkActive=\\\"active\\\">Approved Enrichment</button>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/request-form\\\" routerLinkActive=\\\"active\\\">Novel Enrichment Request Form</button>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/incident-report\\\" routerLinkActive=\\\"active\\\">Incident Report</button>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/request-form-status\\\" routerLinkActive=\\\"active\\\">Request Form Status Report</button>\\r\\n        <button mat-raised-button class=\\\"button-full-width\\\" color=\\\"primary\\\" routerLink=\\\"/incident-report-status\\\" routerLinkActive=\\\"active\\\">Incident Status Report</button>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-grid-tile>\\r\\n  <mat-grid-tile [colspan]=\\\"1\\\">\\r\\n    <mat-card class=\\\"mat-elevation-z8 set-width\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Welcome {{name}} to the OHDZA Enrichment Database!</mat-card-title>\\r\\n        <mat-card-subtitle>To the Behavior Enrichment Logs</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <img mat-card-image [src]=\\\"homepageImage\\\" height=\\\"375\\\">\\r\\n      <mat-card-content>\\r\\n        <p>REWORD this!</p>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\"","module.exports = \".button-full-width {\\n  display: block;\\n  width: 100%;\\n  margin-bottom: 20px; }\\n\\n.set-width {\\n  max-width: 700px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcVXNlcnNcXFphY2hcXERvY3VtZW50c1xcYVNwcmluZzIwMTlcXENhcHN0b25lXFxQR0ItQW5ndWxhclxcQmVoYXZpb3JhbEVucmljaG1lbnQtQW5ndWxhci9zcmNcXGFwcFxcaG9tZVxcaG9tZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsbUJBQW1CLEVBQUE7O0FBRXJCO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uLWZ1bGwtd2lkdGgge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuLnNldC13aWR0aCB7XHJcbiAgbWF4LXdpZHRoOiA3MDBweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ImageInfo } from '../shared/interfaces/image-info';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  name: string;\r\n  homepageImage: string;\r\n  constructor(\r\n    private currentUser: CurrentUserService,\r\n    private service: EnrichmentService,\r\n    private snackbar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.name = this.currentUser.getUser().firstName;\r\n    this.getHomepageImage();\r\n  }\r\n\r\n  getHomepageImage() {\r\n    this.service.getHomepageImage().subscribe((data: ImageInfo) => {\r\n      this.homepageImage = `data:image/jpg;base64,${data.base64EncodedImage}`;\r\n    }, (err: any) => {\r\n      this.snackbar.open('ERROR: HTTP error when getting homepage image', 'OK', {\r\n        duration: 3000\r\n      });\r\n      console.error('Error getting homepage image:');\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Novel Life Strategy Enrichment Incidents</h1>\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <ng-container matColumnDef=\\\"select\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef>\\r\\n      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel()\\\">\\r\\n      </mat-checkbox>\\r\\n    </th>\\r\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel(row)\\\">\\r\\n      </mat-checkbox>\\r\\n    </td>\\r\\n  </ng-container>    \\r\\n\\r\\n    \\r\\n  <!-- Incident ID Column -->\\r\\n  <ng-container matColumnDef=\\\"incidentID\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Incident ID </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.incidentID}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Incident Date Column -->\\r\\n  <ng-container matColumnDef=\\\"incDate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Incident Date </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.incDate}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Enrichment Item Column -->\\r\\n  <ng-container matColumnDef=\\\"enrichItem\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Enrichment Item </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.enrichItem}} </td>\\r\\n  </ng-container>    \\r\\n\\r\\n  <!-- Department Column -->\\r\\n  <ng-container matColumnDef=\\\"department\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.department}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!--Future Use Column -->\\r\\n  <ng-container matColumnDef=\\\"futureUse\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Future Use Decision </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.futureUse}} </td>\\r\\n\\r\\n  </ng-container>\\r\\n\\r\\n   <!--Future Use Update Column -->\\r\\n  <ng-container matColumnDef=\\\"futureUseUpdate\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.futureUseUpdate}} </td>\\r\\n    \\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\"></tr>\\r\\n\\r\\n</table>\\r\\n\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n\\r\\n\\r\\n<!--div>\\r\\n  <label for=\\\"pending\\\">Decision on Future Use of the Enrichment Involved in the Incident (Pending Only):</label>\\r\\n  <br/>\\r\\n  <mat-radio-group class=\\\"radio-group left-margin\\\" id=\\\"pending\\\" name=\\\"pending\\\" formControlName=\\\"pending\\\" required>\\r\\n    <mat-radio-button class=\\\"radio-button\\\" value=\\\"dontUse\\\">The enrichment item should no longer be used</mat-radio-button>\\r\\n    <mat-radio-button class=\\\"radio-button\\\" value=\\\"certainUse\\\">The enrichment item should no longer be used for this particular animal</mat-radio-button>\\r\\n    <mat-radio-button class=\\\"radio-button\\\" value=\\\"modify\\\">The enrichment item should be modified before use again</mat-radio-button>\\r\\n    <mat-radio-button class=\\\"radio-button\\\" value=\\\"other\\\">Other</mat-radio-button> \\r\\n  </mat-radio-group>\\r\\n</div-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5jaWRlbnQtcmVwb3J0LXN0YXR1cy9DOlxcVXNlcnNcXFphY2hcXERvY3VtZW50c1xcYVNwcmluZzIwMTlcXENhcHN0b25lXFxQR0ItQW5ndWxhclxcQmVoYXZpb3JhbEVucmljaG1lbnQtQW5ndWxhci9zcmNcXGFwcFxcaW5jaWRlbnQtcmVwb3J0LXN0YXR1c1xcaW5jaWRlbnQtcmVwb3J0LXN0YXR1cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2luY2lkZW50LXJlcG9ydC1zdGF0dXMvaW5jaWRlbnQtcmVwb3J0LXN0YXR1cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\nexport interface IncidentInstance {\r\n  incidentID: number;\r\n  incDate: string;\r\n  department: string;\r\n  futureUse: string;\r\n  enrichItem: string;\r\n  futureUseUpdate: string;\r\n}\r\n\r\n\r\n\r\n// Stand in sampling data until database ready\r\nconst INCIDENTS: IncidentInstance[] = [\r\n  {incidentID: 1, incDate: '12 Apr 19', enrichItem: 'Feather', department: 'Birds', futureUse: \"Do not use\", futureUseUpdate: \"update\"},\r\n  {incidentID: 2, incDate: '13 Apr 19', enrichItem: 'Log', department: 'Lizards', futureUse: \"Do not use\", futureUseUpdate: \"update\"},\r\n  {incidentID: 3, incDate: '13 Feb 19', enrichItem: 'Ball', department: 'Monkeys', futureUse: \"Pending\", futureUseUpdate: \"update\"},\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'app-incident-report-status',\r\n  templateUrl: './incident-report-status.component.html',\r\n  styleUrls: ['./incident-report-status.component.scss'],\r\n})\r\n\r\n\r\nexport class IncidentReportStatusComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['incidentID', 'incDate', 'enrichItem','department', 'futureUse', 'futureUseUpdate'];\r\n  dataSource = new MatTableDataSource<IncidentInstance>(INCIDENTS);\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Novel Life Strategy Enrichment Incident Report</h1>\\r\\n\\r\\n<form [formGroup]=\\\"incidentReportFormGroup\\\">\\r\\n  <mat-horizontal-stepper [linear]=\\\"false\\\" #stepper formArrayName=\\\"incidentReport\\\">\\r\\n    <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"incidentReport?.get([0])\\\" label=\\\"General Information\\\">\\r\\n\\r\\n      \\r\\n      <div>\\r\\n        <!-- <label for=\\\"dept\\\">Department: </label> -->\\r\\n        <mat-form-field id=\\\"incDepartment\\\" name=\\\"incDepartment\\\">\\r\\n          <input matInput placeholder=\\\"Department\\\" formControlName=\\\"incDepartment\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <!-- <label for=\\\"date\\\">Date of Incident: </label> -->\\r\\n        <label for=\\\"date\\\">Date of incident: </label>\\r\\n        <mat-form-field id=\\\"dateOfIncident\\\" name=\\\"dateOfIncident\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date\\\" formControlName=\\\"dateOfIncident\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <!-- <label for=\\\"location\\\">Location: </label> -->\\r\\n        <mat-form-field id=\\\"locationOfIncident\\\" name=\\\"locationOfIncident\\\">\\r\\n          <input matInput placeholder=\\\"Location of Incident:\\\" formControlName=\\\"locationOfIncident\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <!-- <label for=\\\"location\\\">Location: </label> -->\\r\\n        <mat-form-field id=\\\"animalsIncident\\\" name=\\\"animalsIncident\\\">\\r\\n          <input matInput placeholder=\\\"Animal(s) Involved:\\\" formControlName=\\\"animalsIncident\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n          <button mat-raised-button matStepperNext type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"incidentReport?.get([1])\\\" label=\\\"Enrichment Data\\\">\\r\\n      <div>\\r\\n        <label for=\\\"enrichmentInvolved\\\">Enrichment(s) Involved in the Incident:</label>\\r\\n        <br/>\\r\\n        <mat-radio-group class=\\\"radio-group left-margin\\\" id=\\\"enrichmentInvolved\\\" name=\\\"enrichmentInvolved\\\" formControlName=\\\"enrichmentInvolved\\\" required>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"novel\\\">Novel enrichment</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"previous\\\">Previously introduced enrichment</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"incidentReport?.get([1]).value.enrichmentInvolved === 'novel'\\\" class=\\\"left-margin\\\">\\r\\n        <mat-form-field id=\\\"novelYN\\\" name=\\\"novelYN\\\">\\r\\n          <label for=\\\"novelYN\\\">Was an enrichment request form filled out and approved? </label>\\r\\n          <mat-select placeholder=\\\"\\\" formControlName=\\\"novelYN\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <label for=\\\"enrichDescription\\\">Describe the Enrichment Involved in the Incident:</label>\\r\\n        <br/>\\r\\n        <mat-form-field class=\\\"increased-width\\\" id=\\\"enrichDescription\\\" name=\\\"enrichDescription\\\">\\r\\n          <textarea matInput placeholder=\\\"Details, articles, any data if possible\\\" formControlName=\\\"enrichDescription\\\" required></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n          <button mat-raised-button matStepperNext type=\\\"button\\\">Next</button>\\r\\n        </div>\\r\\n\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step formGroupName=\\\"2\\\" [stepControl]=\\\"incidentReport?.get([2])\\\" label=\\\"Incident Data\\\">\\r\\n      <div>\\r\\n        <label for=\\\"bestDescribes\\\">Please choose which one best describes the incident: </label>\\r\\n        <br/>\\r\\n        <mat-radio-group class=\\\"radio-group left-margin\\\" id=\\\"bestDescribes\\\" name=\\\"bestDescribes\\\" formControlName=\\\"bestDescribes\\\" required>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"death\\\">An animal is deceased as a result of the incident</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"danger\\\">An animal’s life was in immediate danger</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"injured\\\">An animal or another in area was injured by the enrichment item</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"caught\\\">An animal was caught in/on the enrichment item</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"injested\\\">An animal ingested part of the enrichment item</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"distress\\\">Enrichment caused distress or social disruption</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"other\\\">Other. Detail in text box below.</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <label for=\\\"incDescription\\\">Describe the incident: </label>\\r\\n        <br/>\\r\\n        <mat-form-field class=\\\"increased-width\\\" id=\\\"incDescription\\\" name=\\\"incDescription\\\">\\r\\n          <textarea matInput placeholder=\\\"Details, articles, any data if possible\\\" formControlName=\\\"incDescription\\\" required></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <label for=\\\"actionsTaken\\\">Describe actions taken: </label>\\r\\n        <br/>\\r\\n        <mat-form-field class=\\\"increased-width\\\" id=\\\"actionsTaken\\\" name=\\\"actionsTaken\\\">\\r\\n          <textarea matInput placeholder=\\\"Details, articles, any data if possible\\\" formControlName=\\\"actionsTaken\\\" required></textarea>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <!-- <label for=\\\"name\\\">Name: </label> -->\\r\\n        <label for=\\\"name\\\">Your name: </label>\\r\\n        <mat-form-field id=\\\"incName\\\" name=\\\"incName\\\">\\r\\n          <input matInput placeholder=\\\"John Smith\\\" formControlName=\\\"incName\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <!-- <label for=\\\"date\\\">Date of Incident: </label> -->\\r\\n        <label for=\\\"dateOfSubmission\\\">Date of submission: </label>\\r\\n        <mat-form-field id=\\\"dateOfSubmission\\\" name=\\\"dateOfSubmission\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Date\\\" formControlName=\\\"dateOfSubmission\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!incidentReportFormGroup.valid\\\" (click)=\\\"submitForm(stepper)\\\">Submit</button>\\r\\n      </div>\\r\\n\\r\\n    </mat-step>\\r\\n\\r\\n\\r\\n  </mat-horizontal-stepper>\\r\\n</form>\\r\\n\\r\\n\"","module.exports = \".increased-width {\\n  width: 500px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.radio-button {\\n  margin: 5px; }\\n\\n.button-row button {\\n  margin-right: 8px; }\\n\\n.left-margin {\\n  margin-left: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5jaWRlbnQtcmVwb3J0L0M6XFxVc2Vyc1xcWmFjaFxcRG9jdW1lbnRzXFxhU3ByaW5nMjAxOVxcQ2Fwc3RvbmVcXFBHQi1Bbmd1bGFyXFxCZWhhdmlvcmFsRW5yaWNobWVudC1Bbmd1bGFyL3NyY1xcYXBwXFxpbmNpZGVudC1yZXBvcnRcXGluY2lkZW50LXJlcG9ydC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVksRUFBQTs7QUFFZDtFQUNFLFdBQVcsRUFBQTs7QUFFYjtFQUNFLG9CQUFvQjtFQUNwQixzQkFBc0IsRUFBQTs7QUFFeEI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxpQkFBaUIsRUFBQTs7QUFFbkI7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2luY2lkZW50LXJlcG9ydC9pbmNpZGVudC1yZXBvcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5jcmVhc2VkLXdpZHRoIHtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICB9XHJcbiAgLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5yYWRpby1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIC5yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbiAgfVxyXG4gIC5idXR0b24tcm93IGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDhweDtcclxuICB9XHJcbiAgLmxlZnQtbWFyZ2luIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA1MHB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators, FormControl, AbstractControl, FormArray} from '@angular/forms';\r\nimport { IncidentService, StandardReturnObject } from '../shared/main/incident.service';\r\nimport { MatSnackBar, MatStepper, MatChipInputEvent, MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport { Observable } from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { IncidentReportForm } from '../shared/interfaces/incident-report-form';\r\n\r\n@Component({\r\n  selector: 'app-incident-report',\r\n  templateUrl: './incident-report.component.html',\r\n  styleUrls: ['./incident-report.component.scss']\r\n})\r\n\r\nexport class IncidentReportComponent implements OnInit {\r\n  incidentReportFormGroup: FormGroup;\r\n  get incidentReport(): AbstractControl | null { return this.incidentReportFormGroup.get('incidentReport'); }\r\n\r\n  // Category chips variables\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  private incidentFormControl: FormArray;\r\n  public categories: string[] = [];\r\n  public allCategories = ['Sensory', 'Feeding', 'Habitation', 'Social', 'Learning'];\r\n  public filteredCategories: Observable<string[]>;\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n  constructor(private formBuilder: FormBuilder, private service: IncidentService, private snackbar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n    this.incidentFormControl = this.incidentReportFormGroup.controls['incidentReport'] as FormArray;\r\n\r\n  }\r\n\r\n  initFormGroup() {\r\n    this.incidentReportFormGroup = this.formBuilder.group({\r\n      incidentReport: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          incDepartment: new FormControl('', Validators.required),\r\n          dateOfIncident: new FormControl('', Validators.required),\r\n          locationOfIncident: new FormControl('', Validators.required),\r\n          animalsIncident: new FormControl('', Validators.required),\r\n\r\n        }),\r\n        this.formBuilder.group({\r\n          enrichmentInvolved: new FormControl('', Validators.required),\r\n          novelYN: new FormControl(''),\r\n          enrichDescription: new FormControl('', Validators.required),\r\n\r\n        }),\r\n\r\n        this.formBuilder.group({\r\n          bestDescribes: new FormControl('', Validators.required),\r\n          incDescription: new FormControl('', Validators.required),\r\n          actionsTaken: new FormControl('', Validators.required),\r\n          incName: new FormControl('', Validators.required),\r\n          dateOfSubmission: new FormControl('', Validators.required),\r\n\r\n        })\r\n      ])\r\n    });\r\n  }\r\n\r\n  submitForm(stepper: MatStepper) {\r\n    // TODO: submit image options:\r\n    // https://stackoverflow.com/questions/1665730/images-in-mysql\r\n    // https://stackoverflow.com/questions/3014578/storing-images-in-mysql\r\n    // https://stackoverflow.com/questions/6472233/can-i-store-images-in-mysql\r\n    // https://www.quora.com/What-is-the-best-way-to-store-100-images-in-a-MySQL-database-in-this-case\r\n    console.log('incident form submitted:');\r\n    console.log(this.toSingleObject(this.incidentReportFormGroup.value));\r\n    this.service.submitIncidentReportForm(this.toSingleObject(this.incidentReportFormGroup.value)).subscribe(\r\n      (data: StandardReturnObject) => {\r\n        if (!data.error) {\r\n          this.snackbar.open(data.message, 'OK', {\r\n            duration: 5000\r\n          });\r\n          stepper.reset();\r\n        } else {\r\n          // do NOT reset form\r\n          this.snackbar.open(`ERROR: ${data.errorMsg}`, 'OK', {\r\n            duration: 5000\r\n          });\r\n        }\r\n    });\r\n  }\r\n\r\n  toSingleObject(groupValue: any): IncidentReportForm {\r\n    const requestArray = groupValue.incidentReport;\r\n    const completeForm: IncidentReportForm = {\r\n      department: requestArray[0].department,\r\n      dateOfIncident: requestArray[0].dateOfIncident,\r\n      locationOfIncident: requestArray[0].locationOfIncident,\r\n      animalsIncident: requestArray[0].locationOfIncident,\r\n\r\n      enrichmentInvolved: requestArray[1].enrichmentInvolved,\r\n      novelYN: requestArray[1].novelYN,  \r\n      enrichDescription: requestArray[1].enrichDescription,   \r\n\r\n      bestDescribes: requestArray[2].bestDescribes,\r\n      incDescription: requestArray[2].incDescription,\r\n      actionsTaken: requestArray[2].actionsTaken,\r\n      incName: requestArray[2].incName,\r\n      dateOfSubmission: requestArray[2].dateOfSubmission,\r\n    \r\n    };\r\n    return completeForm;\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    // Add category only when MatAutocomplete is not open\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // Add our category\r\n      if ((value || '').trim()) {\r\n        this.categories.push(value.trim());\r\n      }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.incidentFormControl.at(4).get('enrichmentCategory').setValue(null);\r\n    }\r\n\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.incidentFormControl.at(4).get('enrichmentCategory').setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allCategories.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n}","module.exports = \"<h1 class=\\\"mat-display-1 center-align\\\">Omaha's Henry Doorly Zoo & Aquarium Behavioral Enrichment Program</h1>\\r\\n<mat-grid-list cols=\\\"1\\\" rowHeight=\\\"550px\\\">\\r\\n  <mat-grid-tile>\\r\\n    <mat-card class=\\\"max-width mat-elevation-z8\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Login</mat-card-title>\\r\\n        <mat-card-subtitle>Username & Password</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n      <img mat-card-image src=\\\"../../assets/images/Zoo_Logo_Horizontal.jpg\\\" alt=\\\"Zoo Logo\\\">\\r\\n      <mat-card-content>\\r\\n        <form class=\\\"form-css\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"logIn()\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" hintLabel=\\\"Max 15 characters\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Username</mat-label>\\r\\n            <input matInput formControlName=\\\"username\\\" type=\\\"text\\\" placeholder=\\\"panther\\\" autofocus required/>\\r\\n            <mat-hint align=\\\"end\\\">{{loginForm.get('username').value?.length || 0}}/15</mat-hint>\\r\\n            <mat-error *ngIf=\\\"loginForm.get('username').invalid\\\">{{getUsernameErrorMessage()}}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Password</mat-label>\\r\\n            <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"pleasedonteatme\\\" required/>\\r\\n            <mat-error *ngIf=\\\"loginForm.get('password').invalid\\\">Password is required</mat-error>\\r\\n          </mat-form-field>\\r\\n          <button type=\\\"submit\\\" style=\\\"display:none\\\" [disabled]=\\\"!loginForm.valid\\\"></button>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button (click)=\\\"logIn()\\\" color=\\\"primary\\\" [disabled]=\\\"!loginForm.valid\\\">Log In</button>\\r\\n        <!-- TODO: add loading/progress spinner when logging in (errors take longer, lets user know it's working) -->\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </mat-grid-tile>\\r\\n</mat-grid-list>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Globals } from '../globals';\r\nimport { UserInfo } from '../shared/interfaces/user-info';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  constructor(\r\n    private router: Router,\r\n    private service: AuthService,\r\n    private snackbar: MatSnackBar,\r\n    private formBuilder: FormBuilder,\r\n    private globals: Globals,\r\n    private currentUser: CurrentUserService) { }\r\n\r\n  // https://angular.io/guide/reactive-forms\r\n  ngOnInit() {\r\n    if (sessionStorage.getItem(this.globals.sessionIdKey)) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n    this.loginForm = this.formBuilder.group({\r\n      username: new FormControl('', [Validators.required, Validators.maxLength(15)]),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.service.loginUser(this.loginForm.value.username, this.loginForm.value.password).subscribe((data: UserInfo) => {\r\n      if (data.loggedIn) {\r\n        // set current user info\r\n        this.currentUser.setUser(data);\r\n        console.log(data);\r\n\r\n        // put user info as stringified JSON in session storage\r\n        sessionStorage.setItem(this.globals.userInfoKey, JSON.stringify(data));\r\n\r\n        // put session id in session storage to track user\r\n        sessionStorage.setItem(this.globals.sessionIdKey, data.sessionId);\r\n        const redirect = this.service.redirectUrl ? this.service.redirectUrl : '/home';\r\n        this.router.navigate([redirect]);\r\n      } else {\r\n        this.snackbar.open(data.errorMsg, 'OK', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    }, error => {\r\n      this.snackbar.open('Error logging in', 'OK', {\r\n        duration: 3000\r\n      });\r\n      console.error('Error logging in: ', error);\r\n    });\r\n  }\r\n\r\n  getUsernameErrorMessage(): string {\r\n    if (this.loginForm.get('username').hasError('required')) {\r\n      return 'Username is required';\r\n    } else if (this.loginForm.get('username').hasError('maxlength')) {\r\n      return 'Must be between 1 and 15 characters';\r\n    } else {\r\n      return 'Invalid username';\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">All Approved Items</h1>\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n    \\r\\n    <!-- Enrichment Item Column -->\\r\\n    <ng-container matColumnDef=\\\"enrichmentItem\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Enrichment Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.enrichmentItem}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- behaviorsEncouraged Column -->\\r\\n    <ng-container matColumnDef=\\\"behaviorsEncouraged\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Behaviors Encouraged </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.behaviorsEncouraged}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- dateApproved Column -->\\r\\n    <ng-container matColumnDef=\\\"dateApproved\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Approved </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dateApproved}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- safetyConcerns Column -->\\r\\n    <ng-container matColumnDef=\\\"safetyConcerns\\\" >\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Safety Concerns </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.safetyConcerns}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- exceptions Column -->\\r\\n    <ng-container matColumnDef=\\\"exceptions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Exceptions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.exceptions}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Comments Column -->\\r\\n    <ng-container matColumnDef=\\\"comments\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Comments </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.comments}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- species Column -->\\r\\n    <ng-container matColumnDef=\\\"species\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Species </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.species}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- category Column -->\\r\\n    <ng-container matColumnDef=\\\"category\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Life Strategy Category(s) </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.category}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"td, th {\\n  width: 14%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFzdGVyLWFwcHJvdmVkL0M6XFxVc2Vyc1xcWmFjaFxcRG9jdW1lbnRzXFxhU3ByaW5nMjAxOVxcQ2Fwc3RvbmVcXFBHQi1Bbmd1bGFyXFxCZWhhdmlvcmFsRW5yaWNobWVudC1Bbmd1bGFyL3NyY1xcYXBwXFxtYXN0ZXItYXBwcm92ZWRcXG1hc3Rlci1hcHByb3ZlZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21hc3Rlci1hcHByb3ZlZC9tYXN0ZXItYXBwcm92ZWQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZCwgdGgge1xyXG4gICAgd2lkdGg6IDE0JTtcclxuICB9Il19 */\"","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\r\nimport { ApprovedEntry } from '../shared/interfaces/approved-entry';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport { DataSource } from '@angular/cdk/table';\r\n\r\n@Component({\r\n  selector: 'app-master-approved',\r\n  templateUrl: './master-approved.component.html',\r\n  styleUrls: ['./master-approved.component.scss']\r\n})\r\nexport class MasterApprovedComponent implements OnInit {\r\n  constructor(private service: EnrichmentService) { }\r\n\r\n  displayedColumns: string[] = ['enrichmentItem', 'behaviorsEncouraged',\r\n  'dateApproved', 'safetyConcerns', 'exceptions', 'comments', 'species', 'category'];\r\n  approvedEntries: ApprovedEntry[];\r\n  dataSource: MatTableDataSource<ApprovedEntry>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.getApprovedEntryFromDB();\r\n    this.dataSource = new MatTableDataSource<ApprovedEntry>(this.approvedEntries);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getApprovedEntryFromDB() {\r\n    this.service.getApprovedEntry().subscribe((data: ApprovedEntry[]) => {\r\n      this.approvedEntries = data;\r\n    }, (err: any) => {\r\n        console.error('Error getting Approved Entries:', err);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // TODO: export master log to pdf, Excel, etc.; options:\r\n  // https://stackoverflow.com/a/50398702\r\n  // https://stackoverflow.com/a/52207189\r\n  // https://stackoverflow.com/a/31536517\r\n}\r\n\r\n\r\n\r\n// Stand-in until can pull from database on back end\r\n/*const ELEMENT_DATA: ApprovedEntry[] = [\r\n  {enrichmentItem: 'Duck Decoy', category: 'Social', species: 'Wading birds, flamingoes',\r\n  behaviorsEncouraged: 'Vocalizing', dateApproved: '11-Dec-18',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n  {enrichmentItem: 'Snow', category: 'Environment', species: 'Penguins',\r\n  behaviorsEncouraged: 'Toboganing', dateApproved: '23-Jan-19',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n  {enrichmentItem: 'Beef Bone', category: 'Chow', species: 'Lions',\r\n  behaviorsEncouraged: 'Chomping', dateApproved: '2-27-19',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n  {enrichmentItem: 'Duck Decoy', category: 'Social', species: 'Wading birds, flamingoes',\r\n  behaviorsEncouraged: 'Vocalizing', dateApproved: '11-Dec-18',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n  {enrichmentItem: 'Duck Decoy', category: 'Social', species: 'Wading birds, flamingoes',\r\n  behaviorsEncouraged: 'Vocalizing', dateApproved: '11-Dec-18',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n  {enrichmentItem: 'Duck Decoy', category: 'Social', species: 'Wading birds, flamingoes',\r\n  behaviorsEncouraged: 'Vocalizing', dateApproved: '11-Dec-18',\r\n  comments: 'none', safetyConcerns: 'none', reports: 'none'},\r\n];*/\r\n","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">All Submitted Forms</h1>\\r\\n\\r\\n<mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- Enrichment_IsApproved Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_IsApproved\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Approved? </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_IsApproved}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Enrichment_DateSubmitted Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_DateSubmitted\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Date Submitted </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_DateSubmitted}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Enrichment_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Form Title </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Submittor_User_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Submittor_User_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Submitted By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Submittor_User_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Department_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Department_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Department_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Item_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Item_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Item </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Item_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Species_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Species_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Species </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Species_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Animal_IsisNumber Column -->\\r\\n    <ng-container matColumnDef=\\\"Animal_IsisNumber\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Isis # </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Animal_IsisNumber}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Description -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Description}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Location_Name Column -->\\r\\n    <ng-container matColumnDef=\\\"Location_Name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Location </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Location_Name}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_PresentationMethod Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_PresentationMethod\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Presentation Method </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_PresentationMethod}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_TimeStart Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_TimeStart\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Start </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_TimeStart}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_TimeEnd Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_TimeEnd\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> End </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_TimeEnd}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n    <!-- Enrichment_Frequency Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Frequency\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Frequency </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Frequency}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_LifeStrategies Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_LifeStrategies\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Life Strategies? </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_LifeStrategies}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_PreviousUse Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_PreviousUse\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Previous Use </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_PreviousUse}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Contact Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Contact\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Contact}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_SafetyQuestions Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_SafetyQuestions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Safety Questions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_SafetyQuestions}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_RisksHazards Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_RisksHazards\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Risks/Hazards </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_RisksHazards}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Goal Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Goal\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Goal </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Goal}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Source Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Source\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Source </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Source}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_TimeRequired Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_TimeRequired\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Time Required </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_TimeRequired}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Construction Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Construction\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Construction </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Construction}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    \\r\\n    <!-- Enrichment_Volunteers Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Volunteers\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Volunteers? </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Volunteers}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Inventory Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Inventory\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Inventory </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Inventory}} </td>\\r\\n    </ng-container>\\r\\n    \\r\\n    <!-- Enrichment_Concerns Column -->\\r\\n    <ng-container matColumnDef=\\\"Enrichment_Concerns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Concerns </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Enrichment_Concerns}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\"","module.exports = \"td, th {\\n  width: 47%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVxdWVzdC1mb3JtLXN0YXR1cy9DOlxcVXNlcnNcXFphY2hcXERvY3VtZW50c1xcYVNwcmluZzIwMTlcXENhcHN0b25lXFxQR0ItQW5ndWxhclxcQmVoYXZpb3JhbEVucmljaG1lbnQtQW5ndWxhci9zcmNcXGFwcFxccmVxdWVzdC1mb3JtLXN0YXR1c1xccmVxdWVzdC1mb3JtLXN0YXR1cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtZm9ybS1zdGF0dXMvcmVxdWVzdC1mb3JtLXN0YXR1cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLCB0aCB7XHJcbiAgICB3aWR0aDogNDclO1xyXG4gIH0iXX0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport {EnrichmentForm} from '../shared/interfaces/enrichment-form';\r\n\r\n\r\n@Component({\r\n  selector: 'app-request-form-status',\r\n  templateUrl: './request-form-status.component.html',\r\n  styleUrls: ['./request-form-status.component.scss']\r\n})\r\nexport class RequestFormStatusComponent implements OnInit {\r\n  constructor(private service: EnrichmentService) { }\r\n\r\n  displayedColumns: string[] = ['Enrichment_IsApproved',\r\n  'Enrichment_DateSubmitted',\r\n  'Enrichment_Name',\r\n  'Submittor_User_Name',\r\n  'Department_Name',\r\n  'Item_Name',\r\n  'Species_Name',\r\n  'Animal_IsisNumber',\r\n  'Enrichment_Description',\r\n  'Location_Name',\r\n  'Enrichment_PresentationMethod',\r\n  'Enrichment_TimeStart',\r\n  'Enrichment_TimeEnd',\r\n\r\n  'Enrichment_Frequency',\r\n  'Enrichment_LifeStrategies',\r\n  'Enrichment_PreviousUse',\r\n  'Enrichment_Contact',\r\n  'Enrichment_SafetyQuestions',\r\n  'Enrichment_RisksHazards',\r\n  'Enrichment_Goal',\r\n  'Enrichment_Source',\r\n  'Enrichment_TimeRequired',\r\n  'Enrichment_Construction',\r\n\r\n  'Enrichment_Volunteers',\r\n  'Enrichment_Inventory',\r\n  'Enrichment_Concerns'];\r\n  enrichmentForms: EnrichmentForm[];\r\n  dataSource: MatTableDataSource<EnrichmentForm>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.getEnrichmentFormFromDB();\r\n    this.dataSource = new MatTableDataSource<EnrichmentForm>(this.enrichmentForms);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getEnrichmentFormFromDB() {\r\n    this.service.getEnrichmentForm().subscribe((data: EnrichmentForm[]) => {\r\n      this.enrichmentForms = data;\r\n    }, (err: any) => {\r\n        console.error('Error getting Enrichment Forms:', err);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Stand in sampling data until database ready\r\n/*const REQUESTS: RequestInstance[] = [\r\n  {requestID: 1, requestItem: 'Hydrogen', approved: true},\r\n  {requestID: 2, requestItem: 'Helium',  approved: false},\r\n  {requestID: 3, requestItem: 'Lithium', approved: true},\r\n  {requestID: 4, requestItem: 'Beryllium', approved: false},\r\n  {requestID: 5, requestItem: 'Boron',  approved: true},\r\n  {requestID: 6, requestItem: 'Carbon', approved: true},\r\n  {requestID: 7, requestItem: 'Nitrogen', approved: true},\r\n  {requestID: 8, requestItem: 'Oxygen', approved: false},\r\n  {requestID: 9, requestItem: 'Fluorine', approved: true},\r\n  {requestID: 10, requestItem: 'Neon', approved: true},\r\n  {requestID: 11, requestItem: 'Sodium',  approved: true},\r\n  {requestID: 12, requestItem: 'Magnesium', approved: false},\r\n  {requestID: 13, requestItem: 'Aluminum', approved: false},\r\n  {requestID: 14, requestItem: 'Silicon', approved: false},\r\n  {requestID: 15, requestItem: 'Phosphorus', approved: false},\r\n  {requestID: 16, requestItem: 'Sulfur', approved: false},\r\n  {requestID: 17, requestItem: 'Chlorine', approved: false},\r\n  {requestID: 18, requestItem: 'Argon',  approved: true},\r\n  {requestID: 19, requestItem: 'Potassium', approved: false},\r\n  {requestID: 20, requestItem: 'Calcium',  approved: true},\r\n];*/\r\n","module.exports = \"<h1 mat-dialog-title>Add New Animal</h1>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <form [formGroup]=\\\"newAnimalForm\\\">\\r\\n    <div>\\r\\n      <!-- Normal Key: Animal_IsisNumber -->\\r\\n      <mat-form-field id=\\\"isis\\\" name=\\\"isis\\\">\\r\\n        <input matInput placeholder=\\\"ISIS Number\\\" formControlName=\\\"isisNumber\\\" required>\\r\\n        <mat-error *ngIf=\\\"newAnimalForm.get('isisNumber')\\\">{{getErrorMsg('isisNumber')}}</mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <!-- Foreign Key: 'species' table -->\\r\\n      <mat-form-field id=\\\"species\\\" name=\\\"species\\\">\\r\\n        <mat-select placeholder=\\\"Species Name\\\" formControlName=\\\"species\\\" required>\\r\\n          <mat-option *ngFor=\\\"let spec of data.species\\\" [value]=\\\"spec.speciesId\\\">\\r\\n            {{spec.speciesName}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <!-- Foreign Key: 'location' table -->\\r\\n      <mat-form-field id=\\\"location\\\" name=\\\"location\\\">\\r\\n        <mat-select placeholder=\\\"Location Name\\\" formControlName=\\\"location\\\" required>\\r\\n          <mat-option *ngFor=\\\"let loc of data.locations\\\" [value]=\\\"loc.id\\\">\\r\\n            {{loc.name}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Housed</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <mat-radio-group class=\\\"radio-group\\\" formControlName=\\\"housed\\\" required>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"individual\\\">Individual</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"conspecific\\\">Group/Conspecific</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"mixedSpecies\\\">Group/Mixed Species</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"onExhibit\\\">On Exhibit</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"offExhibit\\\">Off Exhibit</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n          <mat-error *ngIf=\\\"newAnimalForm.get('housed').hasError('required')\\\">'Housed' is required</mat-error>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n      <br/>\\r\\n      <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Activity Cycle</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <mat-radio-group class=\\\"radio-group\\\" formControlName=\\\"activityCycle\\\" required>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"nocturnal\\\">Nocturnal</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"diurnal\\\">Diurnal</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"crepuscular\\\">Crepuscular</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"variable\\\">Variable</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n          <mat-error *ngIf=\\\"newAnimalForm.get('activityCycle').hasError('required')\\\">'Activity Cycle' is required</mat-error>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n      <br/>\\r\\n      <mat-card class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Age</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <mat-radio-group class=\\\"radio-group\\\" formControlName=\\\"age\\\" required>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"infant\\\">Infant</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"juvenile\\\">Juvenile</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"subadult\\\">Subadult</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"adult\\\">Adult</mat-radio-button><br/>\\r\\n            <mat-radio-button class=\\\"radio-button\\\" value=\\\"geriatric\\\">Geriatric</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n          <mat-error *ngIf=\\\"newAnimalForm.get('age').hasError('required')\\\">'Age(s)' is required</mat-error>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submitNewAnimalForm()\\\" [disabled]=\\\"!newAnimalForm.valid\\\">Submit</button>\\r\\n  </div>\"","module.exports = \"<h1 mat-dialog-title>Add New Item</h1>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <form [formGroup]=\\\"newItemForm\\\">\\r\\n    <label>\\r\\n      Upload photo:\\r\\n      <input type=\\\"file\\\" (change)=\\\"onFileChange($event)\\\" accept=\\\"{.png,.jpg,.jpeg}\\\"/>\\r\\n    </label>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n      <input matInput placeholder=\\\"Item Name\\\" formControlName=\\\"name\\\" required>\\r\\n      <mat-hint align=\\\"end\\\">{{newItemForm.get('name').value?.length || 0}}/100</mat-hint>\\r\\n      <mat-error *ngIf=\\\"newItemForm.get('name')\\\">{{getErrorMsg('name')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Item Comments\\\" formControlName=\\\"comments\\\"></textarea>\\r\\n      <mat-hint align=\\\"end\\\">{{newItemForm.get('comments').value?.length}}/1000</mat-hint>\\r\\n      <mat-error *ngIf=\\\"newItemForm.get('comments')\\\">{{getErrorMsg('comments')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Safety Notes\\\" formControlName=\\\"safetyNotes\\\"></textarea>\\r\\n      <mat-hint align=\\\"end\\\">{{newItemForm.get('safetyNotes').value?.length}}/1000</mat-hint>\\r\\n      <mat-error *ngIf=\\\"newItemForm.get('safetyNotes')\\\">{{getErrorMsg('safetyNotes')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n      <textarea matInput placeholder=\\\"Exceptions\\\" formControlName=\\\"exceptions\\\"></textarea>\\r\\n      <mat-hint align=\\\"end\\\">{{newItemForm.get('exceptions').value?.length}}/1000</mat-hint>\\r\\n      <mat-error *ngIf=\\\"newItemForm.get('exceptions')\\\">{{getErrorMsg('exceptions')}}</mat-error>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submitForm()\\\" [disabled]=\\\"!newItemForm.valid\\\">Submit</button>\\r\\n</div>\\r\\n\"","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">Novel Life Strategy Enrichment Request Form</h1>\\r\\n\\r\\n<form [formGroup]=\\\"enrichmentRequestFormGroup\\\">\\r\\n  <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper formArrayName=\\\"requestForm\\\">\\r\\n    <mat-step formGroupName=\\\"0\\\" [stepControl]=\\\"requestForm?.get([0])\\\" label=\\\"Animal Data\\\">\\r\\n      <div>\\r\\n        <!-- Foreign Key: 'department' table -->\\r\\n        <mat-form-field id=\\\"dept\\\" name=\\\"dept\\\">\\r\\n          <mat-select placeholder=\\\"Department Name\\\" formControlName=\\\"department\\\" required>\\r\\n            <mat-option *ngFor=\\\"let dept of departments\\\" [value]=\\\"dept\\\">\\r\\n              {{dept.departmentName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Foreign Key: 'species' table -->\\r\\n        <mat-form-field id=\\\"species\\\" name=\\\"species\\\">\\r\\n          <mat-select placeholder=\\\"Species Name\\\" formControlName=\\\"species\\\" required>\\r\\n            <mat-option *ngFor=\\\"let spec of species\\\" [value]=\\\"spec\\\">\\r\\n              {{spec.speciesName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field id=\\\"animal\\\" name=\\\"animal\\\">\\r\\n          <mat-select placeholder=\\\"Animal\\\" formControlName=\\\"animal\\\" required>\\r\\n            <mat-option *ngFor=\\\"let animal of animals\\\" [value]=\\\"animal.id\\\">\\r\\n              {{animal.isisNumber}} - {{animal.species}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button class=\\\"left-margin\\\" (click)=\\\"openNewAnimalDialog()\\\">Add New Animal</button>\\r\\n      </div>\\r\\n      <div>\\r\\n        <button mat-raised-button matStepperNext type=\\\"button\\\">Next</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step formGroupName=\\\"1\\\" [stepControl]=\\\"requestForm?.get([1])\\\" label=\\\"Type of Enrichment\\\">\\r\\n      <div>\\r\\n        <!-- Foreign Key: 'item' table -->\\r\\n        <mat-form-field id=\\\"itemId\\\" name=\\\"itemId\\\">\\r\\n          <mat-select placeholder=\\\"Select Item\\\" formControlName=\\\"itemId\\\" required>\\r\\n            <mat-option *ngFor=\\\"let item of items\\\" [value]=\\\"item.id\\\">\\r\\n              {{item.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button class=\\\"left-margin\\\" (click)=\\\"openNewItemDialog()\\\">Add New Item</button>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Name -->\\r\\n        <label for=\\\"enrichmentName\\\">Enrichment Name: </label>\\r\\n        <mat-form-field id=\\\"enrichmentName\\\" name=\\\"enrichmentName\\\">\\r\\n          <input matInput placeholder=\\\"Name\\\" formControlName=\\\"enrichmentName\\\" required>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(1).get('enrichmentName').value?.length || 0}}/50</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(1).get('enrichmentName')\\\">{{getErrorMsg(1, 'enrichmentName')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Description -->\\r\\n        <label for=\\\"description\\\">Describe the Enrichment:</label>\\r\\n        <br/>\\r\\n        <mat-form-field class=\\\"increased-width\\\" id=\\\"description\\\" name=\\\"description\\\">\\r\\n          <textarea matInput placeholder=\\\"Details, articles, any data if possible\\\" formControlName=\\\"enrichmentDescription\\\" required></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(1).get('enrichmentDescription').value?.length || 0}}/1000</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(1).get('enrichmentDescription')\\\">{{getErrorMsg(1, 'enrichmentDescription')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Foreign Key: 'location' table -->\\r\\n        <label for=\\\"location\\\">Where will it be presented?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"location\\\" name=\\\"location\\\">\\r\\n          <mat-select placeholder=\\\"Location Name\\\" formControlName=\\\"enrichmentLocation\\\" required>\\r\\n            <mat-option *ngFor=\\\"let loc of locations\\\" [value]=\\\"loc.id\\\">\\r\\n              {{loc.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_PresentationMethod -->\\r\\n        <label for=\\\"presented\\\">How will it be presented?:</label>\\r\\n        <br/>\\r\\n        <mat-form-field class=\\\"increased-width\\\" id=\\\"presented\\\" name=\\\"presented\\\">\\r\\n          <textarea matInput placeholder=\\\"Presentation\\\" formControlName=\\\"enrichmentPresentationMethod\\\" required></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(1).get('enrichmentPresentationMethod').value?.length || 0}}/1000</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(1).get('enrichmentPresentationMethod')\\\">{{getErrorMsg(1, 'enrichmentPresentationMethod')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_TimeStart and Enrichment_TimeEnd -->\\r\\n        <label for=\\\"enrichmentWhen\\\">Time of day/night presented: </label>\\r\\n        <mat-form-field id=\\\"enrichmentWhen\\\" name=\\\"enrichmentWhen\\\">\\r\\n          <input matInput placeholder=\\\"Time\\\" formControlName=\\\"enrichmentDayNightTime\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Frequency -->\\r\\n        <label for=\\\"enrichmentFreq\\\">Frequency/Duration of presentation: </label>\\r\\n        <mat-form-field id=\\\"enrichmentFreq\\\" name=\\\"enrichmentFreq\\\">\\r\\n          <input matInput placeholder=\\\"Frequency/Duration\\\" formControlName=\\\"enrichmentFrequency\\\" required>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(1).get('enrichmentFrequency')\\\">{{getErrorMsg(1, 'enrichmentFrequency')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n        <button mat-raised-button matStepperNext type=\\\"button\\\">Next</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step formGroupName=\\\"2\\\" [stepControl]=\\\"requestForm?.get([2])\\\" label=\\\"Current Data\\\">\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_LifeStrategies -->\\r\\n        <label for=\\\"lifeStrategies\\\">Have you completed a \\\"Life Strategies\\\" worksheet and researched the species' natural history?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"lifeStrategies\\\" name=\\\"lifeStrategies\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"lifeStrategiesWksht\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_PreviousUse -->\\r\\n        <label for=\\\"anotherPlace\\\">Has another department or zoo used this enrichment before?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"anotherPlace\\\" name=\\\"anotherPlace\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"anotherDeptZoo\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Contact -->\\r\\n        <label for=\\\"anotherPlaceMoreInfo\\\">Have they been contacted for more information?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"anotherPlaceMoreInfo\\\" name=\\\"anotherPlaceMoreInfo\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"anotherDeptZooMoreInfo\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_SafetyQuestions -->\\r\\n        <label for=\\\"safety\\\">Have you addressed safety questions in \\\"Enrichment Protocol\\\"?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"safety\\\" name=\\\"safety\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"safetyQuestion\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n        <br/>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_RisksHazards -->\\r\\n        <label for=\\\"risks\\\">Have risks and hazards been minimized?</label>\\r\\n        <br/>\\r\\n        <mat-form-field id=\\\"risks\\\" name=\\\"risks\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"risksQuestion\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n        <br/>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Concerns -->\\r\\n        <mat-form-field class=\\\"increased-width\\\">\\r\\n          <textarea matInput placeholder=\\\"Detail any concerns here\\\" formControlName=\\\"safetyComment\\\"></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(2).get('safetyComment').value?.length || 0}}/1000</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(2).get('safetyComment')\\\">{{getErrorMsg(2, 'safetyComment')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <button mat-raised-button matStepperPrevious>Back</button>\\r\\n        <button mat-raised-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step formGroupName=\\\"3\\\" [stepControl]=\\\"requestForm?.get([3])\\\" label=\\\"Goal of Enrichment\\\">\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Goal -->\\r\\n        <label for=\\\"behaviors\\\">What natural behaviors do you expect this enrichment to encourage/elicit?</label>\\r\\n        <mat-form-field id=\\\"behaviors\\\" name=\\\"behaviors\\\" class=\\\"full-width\\\">\\r\\n          <textarea matInput placeholder=\\\"Natural Behaviors\\\" formControlName=\\\"naturalBehaviors\\\" required></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(3).get('naturalBehaviors').value?.length || 0}}/1000</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(3).get('naturalBehaviors')\\\">{{getErrorMsg(3, 'naturalBehaviors')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n        <button mat-raised-button matStepperNext type=\\\"button\\\">Next</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step formGroupName=\\\"4\\\" [stepControl]=\\\"requestForm?.get([4])\\\" label=\\\"Materials/Cost Analysis\\\">\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Source -->\\r\\n        <label for=\\\"source\\\">Source:</label>\\r\\n        <br/>\\r\\n        <mat-radio-group class=\\\"radio-group left-margin\\\" id=\\\"source\\\" name=\\\"source\\\" formControlName=\\\"source\\\" required>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"To Be Purchased\\\">Needs to be purchased</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"Zoo Grounds\\\">Zoo grounds</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"Donation\\\">Donation</mat-radio-button>\\r\\n          <mat-radio-button class=\\\"radio-button\\\" value=\\\"Other\\\">Other</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"requestForm?.get([4]).value.source === 'other'\\\" class=\\\"left-margin\\\">\\r\\n        <!-- Normal Key: Enrichment_Source (will override previous entry) -->\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Other source\\\" formControlName=\\\"otherSource\\\" required>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(4).get('otherSource').value?.length || 0}}/50</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(4).get('otherSource')\\\">{{getErrorMsg(4, 'otherSource')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_TimeRequired -->\\r\\n        <label for=\\\"timeRequired\\\">Time Required: </label>\\r\\n        <mat-form-field id=\\\"timeRequired\\\" name=\\\"timeRequired\\\">\\r\\n          <input matInput placeholder=\\\"Time required\\\" formControlName=\\\"timeRequired\\\" required>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(4).get('timeRequired')\\\">{{getErrorMsg(4, 'timeRequired')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Construction -->\\r\\n        <label for=\\\"construct\\\">Who will construct and how?: </label>\\r\\n        <mat-form-field id=\\\"construct\\\" name=\\\"construct\\\" class=\\\"full-width\\\">\\r\\n          <textarea matInput placeholder=\\\"Who/How?\\\" formControlName=\\\"whoConstructs\\\" required></textarea>\\r\\n          <mat-hint align=\\\"end\\\">{{requestForm.at(4).get('whoConstructs').value?.length || 0}}/1000</mat-hint>\\r\\n          <mat-error *ngIf=\\\"requestForm.at(4).get('whoConstructs')\\\">{{getErrorMsg(4, 'whoConstructs')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Volunteers -->\\r\\n        <label for=\\\"volunteer\\\">Can volunteer(s)/docent(s) be utilized? </label>\\r\\n        <mat-form-field id=\\\"volunteer\\\" name=\\\"volunteer\\\">\\r\\n          <mat-select placeholder=\\\"Yes/No\\\" formControlName=\\\"volunteerDocentUtilized\\\" required>\\r\\n            <mat-option [value]=\\\"true\\\">Yes</mat-option>\\r\\n            <mat-option [value]=\\\"false\\\">No</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Inventory -->\\r\\n        <label for=\\\"inventory\\\">For inventory use, please select applicable categories for this enrichment: </label>\\r\\n        <mat-form-field id=\\\"inventory\\\" name=\\\"inventory\\\" class=\\\"full-width\\\">\\r\\n          <mat-chip-list #categoryList>\\r\\n            <mat-chip\\r\\n              *ngFor=\\\"let category of categories\\\"\\r\\n              [selectable]=\\\"selectable\\\"\\r\\n              [removable]=\\\"removable\\\"\\r\\n              (removed)=\\\"remove(category)\\\">\\r\\n              {{category}}\\r\\n              <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n            </mat-chip>\\r\\n            <input\\r\\n              placeholder=\\\"Categories\\\"\\r\\n              #categoryInput\\r\\n              formControlName=\\\"enrichmentCategory\\\"\\r\\n              [matAutocomplete]=\\\"auto\\\"\\r\\n              [matChipInputFor]=\\\"categoryList\\\"\\r\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n              [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n              (matChipInputTokenEnd)=\\\"add($event)\\\" required>\\r\\n          </mat-chip-list>\\r\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n            <mat-option *ngFor=\\\"let category of filteredCategories | async\\\" [value]=\\\"category\\\">\\r\\n              {{category}}\\r\\n            </mat-option>\\r\\n          </mat-autocomplete>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_Submittor -->\\r\\n        <label for=\\\"name\\\">Your name: </label>\\r\\n        <mat-form-field id=\\\"name\\\" name=\\\"name\\\">\\r\\n          <input matInput placeholder=\\\"John Smith\\\" formControlName=\\\"nameOfSubmitter\\\" required>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <!-- Normal Key: Enrichment_DateSubmitted -->\\r\\n        <label for=\\\"date\\\">Date of submission: </label>\\r\\n        <mat-form-field id=\\\"date\\\" name=\\\"date\\\">\\r\\n          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date\\\" formControlName=\\\"dateOfSubmission\\\" required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"button-row\\\">\\r\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\">Back</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!enrichmentRequestFormGroup.valid\\\" (click)=\\\"submitForm(stepper)\\\">Submit</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n</form>\\r\\n\"","module.exports = \".increased-width {\\n  width: 500px; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.radio-group {\\n  display: inline-flex;\\n  flex-direction: column; }\\n\\n.radio-button {\\n  margin: 5px; }\\n\\n.button-row button {\\n  margin-right: 8px; }\\n\\n.left-margin {\\n  margin-left: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVxdWVzdC1mb3JtL0M6XFxVc2Vyc1xcWmFjaFxcRG9jdW1lbnRzXFxhU3ByaW5nMjAxOVxcQ2Fwc3RvbmVcXFBHQi1Bbmd1bGFyXFxCZWhhdmlvcmFsRW5yaWNobWVudC1Bbmd1bGFyL3NyY1xcYXBwXFxyZXF1ZXN0LWZvcm1cXHJlcXVlc3QtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVksRUFBQTs7QUFFZDtFQUNFLFdBQVcsRUFBQTs7QUFFYjtFQUNFLG9CQUFvQjtFQUNwQixzQkFBc0IsRUFBQTs7QUFFeEI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxpQkFBaUIsRUFBQTs7QUFFbkI7RUFDRSxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlcXVlc3QtZm9ybS9yZXF1ZXN0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5jcmVhc2VkLXdpZHRoIHtcclxuICB3aWR0aDogNTAwcHg7XHJcbn1cclxuLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5yYWRpby1ncm91cCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4ucmFkaW8tYnV0dG9uIHtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG4uYnV0dG9uLXJvdyBidXR0b24ge1xyXG4gIG1hcmdpbi1yaWdodDogOHB4O1xyXG59XHJcbi5sZWZ0LW1hcmdpbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDUwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef, Inject, ChangeDetectorRef } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators, FormControl, AbstractControl, FormArray} from '@angular/forms';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport { MatSnackBar, MatStepper, MatChipInputEvent, MatAutocomplete, MatAutocompleteSelectedEvent,\r\n  MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport { Observable } from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { CompleteRequestForm } from '../shared/interfaces/complete-request-form';\r\nimport { StandardReturnObject } from '../shared/interfaces/standard-return-object';\r\nimport { CategoryInfo } from '../shared/interfaces/category-info';\r\nimport { SpeciesInfo } from '../shared/interfaces/species-info';\r\nimport { DepartmentInfo } from '../shared/interfaces/department-info';\r\nimport { UserInfo } from '../shared/interfaces/user-info';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\nimport { ItemInfo } from '../shared/interfaces/item-info';\r\nimport { AnimalInfo } from '../shared/interfaces/animal-info';\r\nimport { LocationInfo } from '../shared/interfaces/location-info';\r\n\r\ninterface DialogData {\r\n  species: SpeciesInfo[];\r\n  locations: LocationInfo[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-request-form',\r\n  templateUrl: './request-form.component.html',\r\n  styleUrls: ['./request-form.component.scss']\r\n})\r\nexport class RequestFormComponent implements OnInit {\r\n  enrichmentRequestFormGroup: FormGroup;\r\n  get requestForm(): AbstractControl | null { return this.enrichmentRequestFormGroup.get('requestForm'); }\r\n  departments: DepartmentInfo[];\r\n  species: SpeciesInfo[];\r\n  submitter: UserInfo;\r\n  items: ItemInfo[];\r\n  animals: AnimalInfo[];\r\n  locations: LocationInfo[];\r\n\r\n  // Numbers only regex\r\n  private readonly numberRegex = '^[0-9]*$';\r\n\r\n  // Category chips variables\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  private enrichmentFormControl: FormArray;\r\n  public categories: string[] = [];\r\n  public allCategoryNames: string[];\r\n  public filteredCategories: Observable<string[]>;\r\n  public allCategories: CategoryInfo[];\r\n  @ViewChild('categoryInput') categoryInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private service: EnrichmentService,\r\n    private snackbar: MatSnackBar,\r\n    private currentUser: CurrentUserService,\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.submitter = this.currentUser.getUser();\r\n    this.initFormGroup();\r\n    this.enrichmentFormControl = this.enrichmentRequestFormGroup.controls['requestForm'] as FormArray;\r\n    this.getDepartmentsFromDb();\r\n    this.getCategoriesFromDb();\r\n    this.getSpeciesFromDb();\r\n    this.getItemsFromDb();\r\n    this.getAnimalsFromDb();\r\n    this.getLocationsFromDb();\r\n  }\r\n\r\n  initFormGroup() {\r\n    this.enrichmentRequestFormGroup = this.formBuilder.group({\r\n      requestForm: this.formBuilder.array([\r\n        this.formBuilder.group({\r\n          department: new FormControl(null, Validators.required), // Enrichment_Department\r\n          species: new FormControl(null, Validators.required), // Enrichment_Species\r\n          animal: new FormControl(null, [Validators.required]) // Enrichment_Animal\r\n        }),\r\n        this.formBuilder.group({\r\n          itemId: new FormControl(null, Validators.required), // Foreign Key: 'item' table\r\n          enrichmentName: new FormControl('', [Validators.required, Validators.maxLength(50)]), // Enrichment_Name\r\n          enrichmentDescription: new FormControl('', [Validators.required, Validators.maxLength(1000)]), // Enrichment_Description\r\n          enrichmentLocation: new FormControl(null, [Validators.required]),\r\n          enrichmentPresentationMethod: new FormControl('', [Validators.required,\r\n            Validators.maxLength(1000)]), // Enrichment_PresentationMethod\r\n          enrichmentDayNightTime: new FormControl('', Validators.required), // Enrichment_TimeStart & Enrichment_TimeEnd\r\n          enrichmentFrequency: new FormControl(null, [Validators.required,\r\n            Validators.pattern(this.numberRegex)]) // Enrichment_Frequency: int\r\n        }),\r\n        this.formBuilder.group({\r\n          lifeStrategiesWksht: new FormControl(null, Validators.required), // Enrichment_LifeStrategies: int (0: false, 1: true)\r\n          anotherDeptZoo: new FormControl(null, Validators.required), // Enrichment_PreviousUse: int (0: false, 1: true)\r\n          anotherDeptZooMoreInfo: new FormControl(null, Validators.required), // Enrichment_Contact: int (0: false, 1: true), can be null\r\n          safetyQuestion: new FormControl(null, Validators.required), // Enrichment_SafetyQuestions: int\r\n          risksQuestion: new FormControl(null, Validators.required), // Enrichment_RisksHazards: int\r\n          safetyComment: new FormControl('', Validators.maxLength(1000)) // Enrichment_Concerns\r\n        }),\r\n        this.formBuilder.group({\r\n          naturalBehaviors: new FormControl('', [Validators.required, Validators.maxLength(1000)]) // Enrichment_Goal\r\n        }),\r\n        this.formBuilder.group({\r\n          source: new FormControl('', [Validators.required, Validators.maxLength(50)]), // Enrichment_Source\r\n          otherSource: new FormControl(null, Validators.maxLength(50)), // Enrichment_Source\r\n          timeRequired: new FormControl(null, [Validators.required, Validators.pattern(this.numberRegex)]), // Enrichment_TimeRequired: int\r\n          whoConstructs: new FormControl('', [Validators.required, Validators.maxLength(1000)]), // Enrichment_Construction\r\n          volunteerDocentUtilized: new FormControl(null, Validators.required), // Enrichment_Volunteers: int (0: false, 1: true)\r\n          enrichmentCategory: new FormControl([''], Validators.required), // Enrichment_Inventory: 'item/category' -> 'category'\r\n          nameOfSubmitter: new FormControl({value: `${this.submitter.firstName} ${this.submitter.lastName}`, disabled: true},\r\n            Validators.required), // Enrichment_Submittor\r\n          dateOfSubmission: new FormControl({value: new Date(), disabled: true}, Validators.required) // Enrichment_DateSubmitted\r\n        })\r\n      ])\r\n    });\r\n  }\r\n\r\n  submitForm(stepper: MatStepper) {\r\n    console.log('form submitted:');\r\n    console.log(this.toSingleObject(this.enrichmentRequestFormGroup.value));\r\n    this.service.submitEnrichmentRequestForm(this.toSingleObject(this.enrichmentRequestFormGroup.value)).subscribe(\r\n      (data: StandardReturnObject) => {\r\n        if (!data.error) {\r\n          this.snackbar.open(data.message, 'OK', {\r\n            duration: 5000\r\n          });\r\n          stepper.reset();\r\n        } else {\r\n          // do NOT reset form\r\n          this.snackbar.open(`ERROR: ${data.errorMsg}`, 'OK', {\r\n            duration: 5000\r\n          });\r\n        }\r\n    });\r\n  }\r\n\r\n  private toSingleObject(groupValue: any): CompleteRequestForm {\r\n    const requestArray = groupValue.requestForm;\r\n    const completeForm: CompleteRequestForm = {\r\n      department: requestArray[0].department,\r\n      species: requestArray[0].species,\r\n      animalId: requestArray[0].animal,\r\n\r\n      itemId: requestArray[1].itemId,\r\n      enrichmentName: requestArray[1].enrichmentName,\r\n      enrichmentDescription: requestArray[1].enrichmentDescription,\r\n      enrichmentLocation: requestArray[1].enrichmentLocation,\r\n      enrichmentPresentationMethod: requestArray[1].enrichmentPresentationMethod,\r\n      enrichmentDayNightTime: requestArray[1].enrichmentDayNightTime,\r\n      enrichmentFrequency: requestArray[1].enrichmentFrequency,\r\n\r\n      lifeStrategiesWksht: requestArray[2].lifeStrategiesWksht,\r\n      anotherDeptZoo: requestArray[2].anotherDeptZoo,\r\n      anotherDeptZooMoreInfo: requestArray[2].anotherDeptZooMoreInfo,\r\n      safetyQuestion: requestArray[2].safetyQuestion,\r\n      risksQuestion: requestArray[2].risksQuestion,\r\n      safetyComment: requestArray[2].safetyComment,\r\n\r\n      naturalBehaviors: requestArray[3].naturalBehaviors,\r\n\r\n      source: requestArray[4].source,\r\n      otherSource: requestArray[4].otherSource,\r\n      timeRequired: requestArray[4].timeRequired,\r\n      whoConstructs: requestArray[4].whoConstructs,\r\n      volunteerDocentUtilized: requestArray[4].volunteerDocentUtilized,\r\n      enrichmentCategory: this.categories.join(','),\r\n      nameOfSubmitter: {\r\n        name: `${this.submitter.firstName} ${this.submitter.lastName}`,\r\n        id: this.submitter.id,\r\n        username: `${this.submitter.username}`\r\n      },\r\n      dateOfSubmission: new Date()\r\n    };\r\n    return completeForm;\r\n  }\r\n\r\n  private getDepartmentsFromDb() {\r\n    this.service.getDepartments().subscribe((data: DepartmentInfo[]) => {\r\n      this.departments = data;\r\n    }, (err: any) => {\r\n        console.error('Error getting departments:', err);\r\n    });\r\n  }\r\n\r\n  private getCategoriesFromDb() {\r\n    this.service.getCategories().subscribe((data: CategoryInfo[]) => {\r\n      this.allCategories = data;\r\n      this.allCategoryNames = data.map(cat => cat.categoryName);\r\n      this.filteredCategories = this.enrichmentFormControl.at(4).get('enrichmentCategory').valueChanges.pipe(\r\n        startWith(null),\r\n        map((category: string | null) => category ? this._filter(category) : this.allCategoryNames.slice()));\r\n    }, (err: any) => {\r\n      console.error('Error getting categories:', err);\r\n    });\r\n  }\r\n\r\n  private getSpeciesFromDb() {\r\n    this.service.getSpecies().subscribe((data: SpeciesInfo[]) => {\r\n      this.species = data;\r\n    }, (err: any) => {\r\n      console.error('Error getting species:', err);\r\n    });\r\n  }\r\n\r\n  private getItemsFromDb() {\r\n    this.service.getItems().subscribe((data: ItemInfo[]) => {\r\n      this.items = data;\r\n    }, (err: any) => {\r\n      console.error('Error getting items:', err);\r\n    });\r\n  }\r\n\r\n  private getAnimalsFromDb() {\r\n    this.service.getAnimals().subscribe((data: AnimalInfo[]) => {\r\n      this.animals = data;\r\n    }, (err: any) => {\r\n      console.error('Error getting animals:', err);\r\n    });\r\n  }\r\n\r\n  private getLocationsFromDb() {\r\n    this.service.getLocations().subscribe((data: LocationInfo[]) => {\r\n      this.locations = data;\r\n    }, (err: any) => {\r\n      console.error('Error getting locations:', err);\r\n    });\r\n  }\r\n\r\n  getErrorMsg(index: number, formControlName: string): string {\r\n    if (this.enrichmentFormControl.at(index).get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.enrichmentFormControl.at(index).get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else if (this.enrichmentFormControl.at(index).get(formControlName).hasError('pattern')) {\r\n      return 'Input must be a number';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    // Add category only when MatAutocomplete is not open\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    if (!this.matAutocomplete.isOpen) {\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      // Add our category\r\n      if ((value || '').trim()) {\r\n        this.categories.push(value.trim());\r\n      }\r\n\r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n\r\n      this.enrichmentFormControl.at(4).get('enrichmentCategory').setValue(['']);\r\n    }\r\n  }\r\n\r\n  remove(category: string): void {\r\n    const index = this.categories.indexOf(category);\r\n\r\n    if (index >= 0) {\r\n      this.categories.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.categories.push(event.option.viewValue);\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.enrichmentFormControl.at(4).get('enrichmentCategory').setValue(null);\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value == null ? '' : value.toLowerCase();\r\n\r\n    return this.allCategoryNames.filter(category => category.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  openNewItemDialog(): void {\r\n    const itemDialogRef = this.dialog.open(InsertNewItemDialogComponent);\r\n\r\n    itemDialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.getItemsFromDb();\r\n      }\r\n    });\r\n  }\r\n\r\n  openNewAnimalDialog(): void {\r\n    const animalDialogRef = this.dialog.open(InsertNewAnimalDialogComponent, {\r\n      data: {species: this.species, locations: this.locations}\r\n    });\r\n\r\n    animalDialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.getAnimalsFromDb();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-insert-new-animal-dialog',\r\n  templateUrl: './insert-new-animal-dialog.html',\r\n})\r\nexport class InsertNewAnimalDialogComponent {\r\n  newAnimalForm = new FormGroup({\r\n    isisNumber: new FormControl('', [Validators.required, Validators.pattern('^[0-9]*$')]),\r\n    species: new FormControl(null, Validators.required),\r\n    location: new FormControl(null, Validators.required),\r\n    housed: new FormControl('', Validators.required),\r\n    activityCycle: new FormControl('', Validators.required),\r\n    age: new FormControl('', Validators.required)\r\n  });\r\n  constructor(\r\n    public dialogRef: MatDialogRef<InsertNewAnimalDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private service: EnrichmentService,\r\n    private snackbar: MatSnackBar) {}\r\n\r\n  cancel() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  submitNewAnimalForm() {\r\n    this.service.submitNewAnimal(this.newAnimalForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      if (!data.error) {\r\n        this.dialogRef.close(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  getErrorMsg(formControlName: string): string {\r\n    if (this.newAnimalForm.get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.newAnimalForm.get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else if (this.newAnimalForm.get(formControlName).hasError('pattern')) {\r\n      return 'Input must be a number.';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-insert-new-item-dialog',\r\n  templateUrl: './insert-new-item-dialog.html',\r\n})\r\nexport class InsertNewItemDialogComponent {\r\n  newItemForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    photo: new FormControl(null, Validators.required),\r\n    comments: new FormControl('', [Validators.maxLength(1000)]),\r\n    safetyNotes: new FormControl('', [Validators.maxLength(1000)]),\r\n    exceptions: new FormControl('', [Validators.maxLength(1000)])\r\n  });\r\n  constructor(\r\n    public dialogRef: MatDialogRef<InsertNewItemDialogComponent>,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private service: EnrichmentService,\r\n    private snackbar: MatSnackBar) {}\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  submitForm(): void {\r\n    this.service.submitNewItem(this.newItemForm).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.message || data.errorMsg, 'OK', {\r\n        duration: 3000\r\n      });\r\n      if (!data.error) {\r\n        this.dialogRef.close(true);\r\n      }\r\n    }, (err: any) => {\r\n      console.error('error submitting item:');\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    const reader = new FileReader();\r\n\r\n    if (event.target.files && event.target.files.length) {\r\n      const file = event.target.files[0];\r\n\r\n      reader.onloadend = () => {\r\n        // Sets value to Base64 encoded string\r\n        this.newItemForm.patchValue({\r\n          photo: reader.result\r\n        });\r\n        // need to run CD since file load runs outside of zone\r\n        this.changeDetector.markForCheck();\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  getErrorMsg(formControlName: string): string {\r\n    if (this.newItemForm.get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.newItemForm.get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Globals } from '../../globals';\r\nimport { CompleteRequestForm } from '../interfaces/complete-request-form';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SpeciesInfo } from '../interfaces/species-info';\r\nimport { StandardReturnObject } from '../interfaces/standard-return-object';\r\nimport { CategoryInfo } from '../interfaces/category-info';\r\nimport { DepartmentInfo } from '../interfaces/department-info';\r\nimport { ItemInfo } from '../interfaces/item-info';\r\nimport { UserListInfo } from '../interfaces/user-list-info';\r\nimport { AnimalInfo } from '../interfaces/animal-info';\r\nimport { LocationInfo } from '../interfaces/location-info';\r\nimport { EditUserInfo } from '../interfaces/edit-user-info';\r\nimport { CurrentUserService } from 'src/app/auth/user/current-user.service';\r\nimport { ImageInfo } from '../interfaces/image-info';\r\nimport { ApprovedEntry } from '../interfaces/approved-entry';\r\nimport { EnrichmentForm } from '../interfaces/enrichment-form';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\nconst fileHttpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'multipart/form-data'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnrichmentService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private globals: Globals,\r\n    private currentUser: CurrentUserService) { }\r\n\r\n  addUser(form: FormGroup) {\r\n    const requestBody = {\r\n      firstName: form.value.firstName,\r\n      lastName: form.value.lastName,\r\n      username: form.value.username,\r\n      status: 0,\r\n      department: form.value.department\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/addUser`, requestBody, httpOptions);\r\n  }\r\n\r\n  submitEnrichmentRequestForm(completeForm: CompleteRequestForm) {\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/enrichmentRequest`, completeForm, httpOptions);\r\n  }\r\n\r\n  submitNewItem(itemForm: FormGroup) {\r\n    const requestBody = {\r\n      itemName: itemForm.value.name,\r\n      base64EncodedPhoto: itemForm.value.photo,\r\n      comments: itemForm.value.comments,\r\n      safetyNotes: itemForm.value.safetyNotes,\r\n      exceptions: itemForm.value.exceptions,\r\n      submittor: this.currentUser.getUser().id\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/newItem`, requestBody);\r\n  }\r\n\r\n  submitNewAnimal(animalForm: FormGroup) {\r\n    const requestBody = {\r\n      isisNumber: animalForm.value.isisNumber,\r\n      species: animalForm.value.species,\r\n      location: animalForm.value.location,\r\n      housed: animalForm.value.housed,\r\n      activityCycle: animalForm.value.activityCycle,\r\n      age: animalForm.value.age\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/newAnimal`, requestBody, httpOptions);\r\n  }\r\n\r\n  changePassword(userId: number, userName: string, passForm: FormGroup) {\r\n    const requestBody = {\r\n      userId,\r\n      userName,\r\n      oldPassword: passForm.value.oldPassword,\r\n      newPassword: passForm.value.newPassword\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/changePassword`, requestBody, httpOptions);\r\n  }\r\n\r\n  addDepartment(departmentName: string) {\r\n    const requestBody = {\r\n      departmentName\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/newDept`, requestBody, httpOptions);\r\n  }\r\n\r\n  removeDepartmentById(departmentId: number) {\r\n    const requestBody = {\r\n      departmentId\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/removeDept`, requestBody, httpOptions);\r\n  }\r\n\r\n  addSpecies(newSpeciesForm: FormGroup) {\r\n    const requestBody = {\r\n      speciesName: newSpeciesForm.value.speciesName,\r\n      speciesDescription: newSpeciesForm.value.speciesDescription\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/addSpecies`, requestBody, httpOptions);\r\n  }\r\n\r\n  removeSpeciesbyId(speciesId: number) {\r\n    const requestBody = {\r\n      speciesId\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/removeSpecies`, requestBody, httpOptions);\r\n  }\r\n\r\n  addCategory(cat: FormGroup) {\r\n    const requestBody = {\r\n      categoryName: cat.value.catName,\r\n      categoryDescription: cat.value.catDescription\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/addCategory`, requestBody, httpOptions);\r\n  }\r\n\r\n  deactivateUsers(users: UserListInfo[]) {\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/removeUsers`, users, httpOptions);\r\n  }\r\n\r\n  reactivateUsers(users: UserListInfo[]) {\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/reactivateUsers`, users, httpOptions);\r\n  }\r\n\r\n  resetPasswords(users: UserListInfo[]) {\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/resetUserPasswords`, users, httpOptions);\r\n  }\r\n\r\n  editUser(user: FormGroup) {\r\n    const requestBody = {\r\n      firstName: user.value.firstName,\r\n      lastName: user.value.lastName,\r\n      username: user.value.username,\r\n      userId: user.value.userId,\r\n      department: user.value.department,\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/editUser`, requestBody, httpOptions);\r\n  }\r\n\r\n  uploadNewHomepageImage(imageForm: FormGroup) {\r\n    const requestBody: ImageInfo = {\r\n      base64EncodedImage: imageForm.value.image\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/homepageImage`, requestBody);\r\n  }\r\n\r\n  getHomepageImage() {\r\n    return this.http.get<ImageInfo>(`${this.globals.baseUrl}/getHomepageImage`);\r\n  }\r\n\r\n  getDepartments() {\r\n    return this.http.get<DepartmentInfo[]>(`${this.globals.baseUrl}/departments`);\r\n  }\r\n\r\n  getCategories() {\r\n    return this.http.get<CategoryInfo[]>(`${this.globals.baseUrl}/categories`);\r\n  }\r\n\r\n  getSpecies() {\r\n    return this.http.get<SpeciesInfo[]>(`${this.globals.baseUrl}/species`);\r\n  }\r\n\r\n  getItems() {\r\n    return this.http.get<ItemInfo[]>(`${this.globals.baseUrl}/items`);\r\n  }\r\n\r\n  getUsers() {\r\n    return this.http.get<UserListInfo[]>(`${this.globals.baseUrl}/userList`);\r\n  }\r\n\r\n  getAnimals() {\r\n    return this.http.get<AnimalInfo[]>(`${this.globals.baseUrl}/animals`);\r\n  }\r\n\r\n  getLocations() {\r\n    return this.http.get<LocationInfo[]>(`${this.globals.baseUrl}/locations`);\r\n  }\r\n\r\n  getApprovedEntry() {\r\n    return this.http.get<ApprovedEntry[]>(`${this.globals.baseUrl}/approvedEntries`);\r\n  }\r\n\r\n  getEnrichmentForm() {\r\n    return this.http.get<EnrichmentForm[]>(`${this.globals.baseUrl}/getEnrichmentForm`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Globals } from '../../globals';\r\nimport { IncidentReportForm } from '../interfaces/incident-report-form';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\nexport interface StandardReturnObject {\r\n  message: string;\r\n  error: boolean;\r\n  errorMsg: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IncidentService {\r\n  constructor(private http: HttpClient, private globals: Globals) { }\r\n\r\n  signUp(username: string, password: string) {\r\n    const requestBody = {\r\n      username,\r\n      password\r\n    };\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/signUpUser`, requestBody, httpOptions);\r\n  }\r\n\r\n  submitIncidentReportForm(completeForm: IncidentReportForm) {\r\n    return this.http.post<StandardReturnObject>(`${this.globals.baseUrl}/enrichmentRequest`, completeForm, httpOptions);\r\n  }\r\n}","module.exports = \"<app-header></app-header>\\r\\n<h1 class=\\\"mat-display-1 center-align\\\">My Account</h1>\\r\\n\\r\\n<mat-card class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-title>User Details</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <p>Name: {{userFirstName}} {{userLastName}}</p>\\r\\n    <p>Username: {{userName}}</p>\\r\\n    <p>Department: {{userDepartment}}</p>\\r\\n    <p>Password: **********</p>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button (click)=\\\"toggleChangePassword(true)\\\" [disabled]=\\\"changePasswordToggle\\\">Change Password</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n<br/>\\r\\n<mat-card *ngIf=\\\"changePasswordToggle\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  <mat-card-title>Change Password</mat-card-title>\\r\\n  <mat-card-content>\\r\\n      <form class=\\\"form-css\\\" [formGroup]=\\\"changePasswordForm\\\" #formDirective=\\\"ngForm\\\" (ngSubmit)=\\\"changePassword()\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n          <mat-label>Old Password</mat-label>\\r\\n          <input matInput formControlName=\\\"oldPassword\\\" type=\\\"password\\\" placeholder=\\\"hunter2\\\" required/>\\r\\n          <mat-error *ngIf=\\\"changePasswordForm.get('oldPassword').invalid\\\">{{getErrorMsg('oldPassword')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n          <mat-label>New Password</mat-label>\\r\\n          <input matInput formControlName=\\\"newPassword\\\" type=\\\"password\\\" placeholder=\\\"ineedaweapon\\\" required/>\\r\\n          <mat-error *ngIf=\\\"changePasswordForm.get('newPassword').invalid\\\">{{getErrorMsg('newPassword')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n          <mat-label>Confirm New Password</mat-label>\\r\\n          <input matInput formControlName=\\\"newPassword2\\\" type=\\\"password\\\" placeholder=\\\"ineedaweapon\\\" required/>\\r\\n          <mat-error *ngIf=\\\"changePasswordForm.get('newPassword2').invalid\\\">{{getErrorMsg('newPassword2')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </form>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-raised-button (click)=\\\"toggleChangePassword(false)\\\">Cancel</button>\\r\\n    <button mat-button (click)=\\\"changePassword()\\\" [disabled]=\\\"!changePasswordForm.valid\\\" color=\\\"primary\\\">Submit</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItYWNjb3VudC91c2VyLWFjY291bnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { EnrichmentService } from '../shared/main/enrichment.service';\r\nimport { CurrentUserService } from '../auth/user/current-user.service';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher, MatSnackBar } from '@angular/material';\r\nimport { StandardReturnObject } from '../shared/interfaces/standard-return-object';\r\n\r\nexport class PasswordErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n\r\n    return (invalidCtrl || invalidParent);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-user-account',\r\n  templateUrl: './user-account.component.html',\r\n  styleUrls: ['./user-account.component.scss']\r\n})\r\nexport class UserAccountComponent implements OnInit {\r\n  userFirstName: string;\r\n  userLastName: string;\r\n  userName: string;\r\n  userDepartment: string;\r\n  changePasswordToggle = false;\r\n  changePasswordForm: FormGroup;\r\n  matcher = new PasswordErrorStateMatcher();\r\n\r\n  // ViewChild\r\n  @ViewChild('formDirective') private formDirective: NgForm;\r\n  constructor(\r\n    private service: EnrichmentService,\r\n    private currentUser: CurrentUserService,\r\n    private formBuilder: FormBuilder,\r\n    private snackbar: MatSnackBar\r\n  ) {\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      oldPassword: new FormControl('', [Validators.required, Validators.maxLength(15)]),\r\n      newPassword: new FormControl('', [Validators.required]),\r\n      newPassword2: new FormControl('', [Validators.required])\r\n    }, {validator: this.checkPasswords});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userFirstName = this.currentUser.getUser().firstName;\r\n    this.userLastName = this.currentUser.getUser().lastName;\r\n    this.userName = this.currentUser.getUser().username;\r\n    this.userDepartment = this.currentUser.getUser().department;\r\n  }\r\n\r\n  changePassword() {\r\n    this.service.changePassword(\r\n      this.currentUser.getUser().id,\r\n      this.userName,\r\n      this.changePasswordForm\r\n    ).subscribe((data: StandardReturnObject) => {\r\n      this.snackbar.open(data.error ? data.errorMsg : data.message, 'OK', {\r\n        duration: 3000\r\n      });\r\n      this.formDirective.reset();\r\n      this.changePasswordToggle = false;\r\n    }, (err: any) => {\r\n      this.snackbar.open('HTTP error when changing passwords', 'OK', {\r\n        duration: 3000\r\n      });\r\n      console.error('error changing passwords:', err);\r\n    });\r\n  }\r\n\r\n  toggleChangePassword(isOpen: boolean) {\r\n    this.changePasswordToggle = isOpen;\r\n    this.formDirective.resetForm();\r\n  }\r\n\r\n  getErrorMsg(formControlName: string): string {\r\n    if (this.changePasswordForm.get(formControlName).hasError('required')) {\r\n      return 'Input is required.';\r\n    } else if (this.changePasswordForm.get(formControlName).hasError('maxlength')) {\r\n      return 'Input exceeds max length.';\r\n    } else if (this.changePasswordForm.get(formControlName).hasError('notSame')) {\r\n      return 'New passwords need to match';\r\n    } else {\r\n      return 'Invalid input.';\r\n    }\r\n  }\r\n\r\n  private checkPasswords(group: FormGroup) {\r\n    const pass = group.controls.newPassword.value;\r\n    const confirmPass = group.controls.newPassword2.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}